<!DOCTYPE html>
<html lang="en">


<!-- Mirrored from techzaa.in/larkon/admin/index.html by HTTrack Website Copier/3.x [XR&CO'2014], Tue, 03 Dec 2024 05:41:47 GMT -->
<head>
     <!-- Title Meta -->
     <meta charset="utf-8" />
     <title>Sales Report | GYM WEAR </title>
     <meta name="viewport" content="width=device-width, initial-scale=1.0">
     <meta name="description" content="A fully responsive premium admin dashboard template" />
     <meta name="author" content="Techzaa" />
     <meta http-equiv="X-UA-Compatible" content="IE=edge" />

     <!-- App favicon -->
     <link rel="shortcut icon" href="images/favicon.ico">

     <!-- Vendor css (Require in all Page) -->
     <link href="css/vendor.min.css" rel="stylesheet" type="text/css" />

     <!-- Icons css (Require in all Page) -->
     <link href="css/icons.min.css" rel="stylesheet" type="text/css" />

     <!-- App css (Require in all Page) -->
     <link href="css/app.min.css" rel="stylesheet" type="text/css" />

     <!-- Theme Config js (Require in all Page) -->
     <script src="js/config.js"></script>
     <style>
     .display-none {
      display: none;
     }
      .filter-header {
          font-size: 18px;
          font-weight: bold;
          margin-bottom: 20px;
          color: #333;
      }

      .filter-section {
          display: flex;
          flex-wrap: wrap;
          gap: 20px;
          align-items: center;
      }

      .date-range {
          display: flex;
          align-items: center;
          gap: 10px;
      }

      .date-input {
          padding: 8px 12px;
          border: 1px solid #ddd;
          border-radius: 4px;
          font-size: 14px;
      }

      .quick-filter {
          padding: 8px 12px;
          border: 1px solid #ddd;
          border-radius: 4px;
          font-size: 14px;
          background-color: white;
          cursor: pointer;
      }

      .quick-filter:hover {
          border-color: #999;
      }

      label {
          font-weight: 500;
          color: #666;
      }

      .apply-btn {
          background-color: #0066cc;
          color: white;
          padding: 8px 16px;
          border: none;
          border-radius: 4px;
          cursor: pointer;
          font-size: 14px;
      }

      .apply-btn:hover {
          background-color: #0052a3;
      }
  </style>
</head>

<body>

     <!-- START Wrapper -->
     <div class="wrapper">

          <!-- ========== Topbar Start ========== -->
          <%- include('../partials/admin/header') %>
          <!-- Right Sidebar (Theme Settings) -->
          <%- include('../partials/admin/theme') %>
          <!-- ========== Topbar End ========== -->

          <!-- ========== App Menu Start ========== -->
          <%- include('../partials/admin/nav') %>
          <!-- ========== App Menu End ========== -->

          <!-- ==================================================== -->
          <!-- Start right Content here -->
          <!-- ==================================================== -->
          <div class="page-content">

               <!-- Start Container Fluid -->
               <div class="container-fluid">
                    <div class="row">
                         <div class="col">
                              <div class="card">
                                <div class="card-body">
                                    <div class="filter-section">
                                        <div class="date-range">
                                            <label>Date Range:</label>
                                            <input type="date" id="startDate" class="date-input">
                                            <span>to</span>
                                            <input type="date" id="endDate" class="date-input">
                                        </div>
                                        <div>
                                            <label>Quick Filter:</label>
                                            <select id="quickFilter" class="quick-filter">
                                                <option value="all">All Time</option>
                                                <option value="today">Today</option>
                                                <option value="week">Last 7 Days</option>
                                                <option value="month">Last 30 Days</option>
                                                <option value="year">Last Year</option>
                                            </select>
                                        </div>
                                        <button class="apply-btn" id="apply-btn">Apply Filters</button>
                                    </div>
                                </div>
                              </div>
                              <div class="card">
                                   <div class="card-body">
                                        <div class="d-flex align-items-center justify-content-between">
                                             <h4 class="card-title flex-grow-1">
                                                  Sales Report
                                             </h4>

                                         <div class="dropdown">
                                              <a href="#" class="dropdown-toggle btn btn-sm btn-outline-light" data-bs-toggle="dropdown" aria-expanded="false">
                                                  Download
                                              </a>
                                              <div class="dropdown-menu dropdown-menu-end">
                                                   <!-- item-->
                                                   <button onclick="downloadPDF()" class="dropdown-item">PDF</button>
                                                   <!-- item-->
                                                   <button onclick="downloadExcel()" class="dropdown-item">EXCEL</button>
                                              </div>
                                         </div>
                                        </div>
                                   </div>
                                   <!-- single week and month sales report -->

                                   <div class="table-responsive table-centered" id="month-report-table">
                                    <table class="table mb-0">
                                         <thead id="report-thead" class="bg-light bg-opacity-50">
                                              <tr>
                                                   <th class="ps-3">
                                                    Date
                                                   </th>
                                                   <th>
                                                    Number of Orders
                                                   </th>
                                                   <th>
                                                    Products Sold
                                                   </th>
                                                   <th>
                                                    Total Sales
                                                   </th>
                                                   <th>
                                                    Discounts 
                                                   </th>
                                                   <th>
                                                    Net Sales
                                                   </th>
                                              </tr>
                                         </thead>
                                         <!-- end thead-->
                                         <tbody id="report-tBody">
                                          <% if(result && result.length > 0) { %>
                                          <% for(let i = 0; i<result.length; i++) { %>
                                              <tr>
                                                   <td class="ps-3"><%= result[i].date %></td>
                                                   <td><%= result[i].numberOfOrders %></td>
                                                   <td><%= result[i].productsSold %></td>
                                                   <td><%= result[i].totalSales.toFixed(2) %></td>
                                                   <td><%= result[i].discounts.toFixed(2) %></td>
                                                   <td><%= result[i].netSales.toFixed(2) %></td>
                                              </tr>
                                              <% } %>
                                              <tr>
                                                 <td class="ps-3">Total</td>
                                                 <td><%= total.totalNoOfOrders %></td>
                                                 <td><%= total.totalProductSold %></td>
                                                 <td><%= total.allTotalSales.toFixed(2) %></td>
                                                 <td><%= total.totalDiscount.toFixed(2) %></td>
                                                 <td><%= total.totalNetSales.toFixed(2) %></td>
                                              </tr>
                                              <% } %>
                                         </tbody>
                                         <!-- end tbody -->
                                    </table>
                                    <!-- end table -->
                               </div>
                               <!-- table responsive -->
                              </div>
                              <!-- end card -->
                         </div>
                         <!-- end col -->
                    </div> <!-- end row -->

               </div>
               <!-- End Container Fluid -->

               <!-- ========== Footer Start ========== -->
               <%- include('../partials/admin/footer') %>
               <!-- ========== Footer End ========== -->

          </div>
          <!-- ==================================================== -->
          <!-- End Page Content -->
          <!-- ==================================================== -->

     </div>
     <!-- END Wrapper -->

     <!-- Vendor Javascript (Require in all Page) -->
     <script src="js/vendor.js"></script>

     <!-- App Javascript (Require in all Page) -->
     <script src="js/app.js"></script>     
    
     <script>

      async function fetchData(event) {
        try {
          event.preventDefault();
          if(!validateDateRange()) {
            return;
          }
          const startDate = document.getElementById('startDate').value;
          const endDate = document.getElementById('endDate').value;
          const response = await fetch(`/admin/salesReport?srt_date=${startDate}&end_date=${endDate}`, {method: 'POST'});
          const data = await response.json();
          if(!response.ok) {
            throw new Error(data.message);
          } 
          if(data.success) {
            if(startDate === endDate) {
              createTableHeadRow('day');
              const existingTbody = document.getElementById('report-tBody');
              const newTbody = createDayTable(data.result, data.total);
              existingTbody.replaceWith(newTbody);
            } else {
              createTableHeadRow('month');
              const existingTbody = document.getElementById('report-tBody');
              const newTbody = createMonthTable(data.result, data.total);
              existingTbody.replaceWith(newTbody);
            }
          } 
        } catch (error) {
          Swal.fire({
               position: "top-end",
               icon: "error",
               title: "Oops...",
               text: error.message,
               showConfirmButton: false,
               timer: 1500,
               customClass: {
               popup: 'custom-swal-popup'
               }
          });
        }
      }

      document.getElementById('apply-btn').addEventListener('click', fetchData)

      function createMonthTable(result, total) {
        const tbody = document.createElement('tbody');
        tbody.id = 'report-tBody';
        result.forEach(item => {
          const row = document.createElement('tr');
          const cellDate = document.createElement('td');
          cellDate.classList.add('ps-3')
          cellDate.textContent = item.date;
          row.appendChild(cellDate);
          const cellNoOfOrd = document.createElement('td');
          cellNoOfOrd.textContent = item.numberOfOrders;
          row.appendChild(cellNoOfOrd);
          const cellProductSold = document.createElement('td');
          cellProductSold.textContent = item.productsSold;
          row.appendChild(cellProductSold);
          const cellTotalSale = document.createElement('td');
          cellTotalSale.textContent = item.totalSales.toFixed(2);
          row.appendChild(cellTotalSale);
          const cellDiscount = document.createElement('td');
          cellDiscount.textContent = item.discounts.toFixed(2);
          row.appendChild(cellDiscount);
          const cellNetSale = document.createElement('td');
          cellNetSale.textContent = item.netSales.toFixed(2);
          row.appendChild(cellNetSale);

          tbody.appendChild(row);
        });
        const rowOfTot = document.createElement('tr')
          const cellTotal = document.createElement('td');
          cellTotal.classList.add('ps-3')
          cellTotal.textContent = 'Total';
          rowOfTot.appendChild(cellTotal);
          const totNoOfOrd = document.createElement('td');
          totNoOfOrd.textContent = total.totalNoOfOrders;
          rowOfTot.appendChild(totNoOfOrd);
          const totProductSold = document.createElement('td');
          totProductSold.textContent = total.totalProductSold;
          rowOfTot.appendChild(totProductSold);
          const allTotalSale = document.createElement('td');
          allTotalSale.textContent = total.allTotalSales.toFixed(2);
          rowOfTot.appendChild(allTotalSale);
          const totDiscount = document.createElement('td');
          totDiscount.textContent = total.totalDiscount.toFixed(2);
          rowOfTot.appendChild(totDiscount);
          const totNetSale = document.createElement('td');
          totNetSale.textContent = total.totalNetSales.toFixed(2);
          rowOfTot.appendChild(totNetSale);

          tbody.appendChild(rowOfTot);

        return tbody;
      }


      function createDayTable(result, total) {
        const tbody = document.createElement('tbody');
        tbody.id = 'report-tBody';
        result.forEach(item => {
          const row = document.createElement('tr');
          const cellOrderid = document.createElement('td');
          cellOrderid.classList.add('ps-3')
          cellOrderid.textContent = item.orderId;
          row.appendChild(cellOrderid);
          const cellName = document.createElement('td');
          cellName.textContent = item.customerName;
          row.appendChild(cellName);
          const cellProductSold = document.createElement('td');
          cellProductSold.textContent = item.productsSold;
          row.appendChild(cellProductSold);
          const cellTotalSale = document.createElement('td');
          cellTotalSale.textContent = item.totalSales.toFixed(2);
          row.appendChild(cellTotalSale);
          const cellDiscount = document.createElement('td');
          cellDiscount.textContent = item.discount.toFixed(2);
          row.appendChild(cellDiscount);
          const cellNetSale = document.createElement('td');
          cellNetSale.textContent = item.netSales.toFixed(2);
          row.appendChild(cellNetSale);

          tbody.appendChild(row);
        });
        const rowOfTot = document.createElement('tr')
          const cellTotal = document.createElement('td');
          cellTotal.classList.add('ps-3')
          cellTotal.textContent = 'Total';
          rowOfTot.appendChild(cellTotal);
          const empty1 = document.createElement('td');
          empty1.textContent = '';
          rowOfTot.appendChild(empty1);
          const totProductSold = document.createElement('td');
          totProductSold.textContent = total.totalProductSold;
          rowOfTot.appendChild(totProductSold);
          const allTotalSale = document.createElement('td');
          allTotalSale.textContent = total.allTotalSales.toFixed(2);
          rowOfTot.appendChild(allTotalSale);
          const totDiscount = document.createElement('td');
          totDiscount.textContent = total.totalDiscount.toFixed(2);
          rowOfTot.appendChild(totDiscount);
          const totNetSale = document.createElement('td');
          totNetSale.textContent = total.totalNetSales.toFixed(2);
          rowOfTot.appendChild(totNetSale);

          tbody.appendChild(rowOfTot);

        return tbody;
      }


      function createTableHeadRow(data) {
            const monthHeaders = ['Date', 'Number of Orders', 'Products Sold', 'Total Sales', 'Discounts', 'Net Sales'];
            const dayHeaders = ['Order ID', 'Customer Name', 'Products Sold', 'Total Sales', 'Discounts', 'Net Sales'];

            // Select the thead
            const thead = document.getElementById('report-thead');
            thead.innerHTML = ''

            // Create the row
            const headerRow = document.createElement('tr');
            if(data === 'day') {
              dayHeaders.forEach(headerText => {
                const th = document.createElement('th');
                th.textContent = headerText;
                if (headerText === 'Order ID') th.className = 'ps-3'; // Add specific class for "Date"
                headerRow.appendChild(th);
              });
            } else {
            // Add each header as a <th>
              monthHeaders.forEach(headerText => {
                const th = document.createElement('th');
                th.textContent = headerText;
                if (headerText === 'Date') th.className = 'ps-3'; // Add specific class for "Date"
                headerRow.appendChild(th);
              });
            }
        

            // Append the row to the thead
            thead.appendChild(headerRow);
        }

      // Handle quick filter changes
      document.getElementById('quickFilter').addEventListener('change', function(e) {
          const today = new Date();
          const startDate = document.getElementById('startDate');
          const endDate = document.getElementById('endDate');
          
          switch(e.target.value) {
              case 'today':
                  startDate.value = formatDateInIST(today);
                  endDate.value = formatDateInIST(today);
                  break;
                  
              case 'week':
                  const weekAgo = new Date();
                  weekAgo.setDate(weekAgo.getDate() - 7);
                  startDate.value = formatDateInIST(weekAgo);
                  endDate.value = formatDateInIST(today);
                  break;
                  
              case 'month':
                  const monthAgo = new Date();
                  monthAgo.setDate(monthAgo.getDate() - 30);
                  startDate.value = formatDateInIST(monthAgo);
                  endDate.value = formatDateInIST(today);
                  break;
                  
              case 'all':
                  startDate.value = '2025-01-05';
                  endDate.value = formatDateInIST(today);
                  break;

              case 'year':
                  // const yearAgo = new Date();
                  // yearAgo.setDate(yearAgo.getDate() - 365); 
                  startDate.value = '2025-01-01';
                  endDate.value = formatDateInIST(today);
                  break;
          }
      });

      // Format date to YYYY-MM-DD
     function formatDateInIST(date) {
          const IST_OFFSET = 5.5 * 60 * 60 * 1000; // IST is UTC+5:30
          const istDate = new Date(date.getTime() + IST_OFFSET); // Adjust the date to IST

          const year = istDate.getUTCFullYear();
          const month = String(istDate.getUTCMonth() + 1).padStart(2, '0'); // Months are zero-based
          const day = String(istDate.getUTCDate()).padStart(2, '0');

          return `${year}-${month}-${day}`;
     }

     function allTimeDate() {
          const today = new Date();
          document.getElementById('startDate').value = '2025-01-05';
          document.getElementById('endDate').value = formatDateInIST(today);
     }
     allTimeDate();

      // Validate date range
      function validateDateRange() {
          const srtDate = document.getElementById('startDate').value;
          const endDate = document.getElementById('endDate').value;

          if(!srtDate || !endDate) {
            Swal.fire({
              position: "top-end",
              icon: "error",
              title: "Oops...",
              text: 'Start date and End date is required',
              showConfirmButton: false,
              timer: 1500,
              customClass: {
                  popup: 'custom-swal-popup'
              }
            });
            return false
          } 
          
          if (new Date(srtDate) > new Date(endDate)) {
              Swal.fire({
                position: "top-end",
                icon: "error",
                title: "Oops...",
                text: 'Start date cannot be later than end date',
                showConfirmButton: false,
                timer: 1500,
                customClass: {
                    popup: 'custom-swal-popup'
                }
              });
              return false;
          }
          return true;
      }

     async function downloadPDF() { 
          try {
               const startDate = document.getElementById('startDate').value;
               const endDate = document.getElementById('endDate').value;
               const response = await fetch(`/admin/download/pdf?startDate=${startDate}&endDate=${endDate}`)
               if(!response.ok) {
                    const data = await response.json();
                    throw new Error(data.message);
               }
               const blob = await response.blob();
            
               const url = window.URL.createObjectURL(blob);

               const a = document.createElement('a');
               a.href = url;
               a.download = `Sales report (${startDate} to ${endDate}).pdf`; // Set the download file name
               document.body.appendChild(a);
               a.click();

               // Clean up
               a.remove();
               window.URL.revokeObjectURL(url);
          } catch (error) {
               Swal.fire({
                    position: "top-end",
                    icon: "error",
                    title: "Oops...",
                    text: error.message,
                    showConfirmButton: false,
                    timer: 1500,
                    customClass: {
                         popup: 'custom-swal-popup'
                    }
               });
          }
       
     }
     async function downloadExcel() { 
          try {
               const startDate = document.getElementById('startDate').value;
               const endDate = document.getElementById('endDate').value;
               const response = await fetch(`/admin/download/excel?startDate=${startDate}&endDate=${endDate}`)
               if(!response.ok) {
                    const data = await response.json();
                    throw new Error(data.message);
               }
               const blob = await response.blob();
            
               const url = window.URL.createObjectURL(blob);

               const a = document.createElement('a');
               a.href = url;
               a.download = `Sales report (${startDate} to ${endDate}).xlsx`; 
               document.body.appendChild(a);
               a.click();

               // Clean up
               a.remove();
               window.URL.revokeObjectURL(url);
          } catch (error) {
               Swal.fire({
                    position: "top-end",
                    icon: "error",
                    title: "Oops...",
                    text: error.message,
                    showConfirmButton: false,
                    timer: 1500,
                    customClass: {
                         popup: 'custom-swal-popup'
                    }
               });
          }
       
     }
     async function logout() {
          try {
               const response = await fetch('/admin/logout', {method: 'POST'})
               const data = await response.json();
               if(!response.ok) {
                    throw new Error(data.message);
               }
               if(data.success) {
                    window.location.href = '/admin/login'
               }
          } catch (error) {
               Swal.fire({
                    position: "top-end",
                    icon: "error",
                    title: "Oops...",
                    text: error.message,
                    showConfirmButton: false,
                    timer: 1500,
                    customClass: {
                         popup: 'custom-swal-popup'
                    }
               });
          }
     }

     document.getElementById('logout-btn').addEventListener('click', logout);

  </script>

</body>


<!-- Mirrored from techzaa.in/larkon/admin/index.html by HTTrack Website Copier/3.x [XR&CO'2014], Tue, 03 Dec 2024 05:42:46 GMT -->
</html>