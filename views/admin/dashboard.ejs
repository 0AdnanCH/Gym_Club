<!DOCTYPE html>
<html lang="en">


<!-- Mirrored from techzaa.in/larkon/admin/index.html by HTTrack Website Copier/3.x [XR&CO'2014], Tue, 03 Dec 2024 05:41:47 GMT -->
<head>
     <!-- Title Meta -->
     <meta charset="utf-8" />
     <title>Dashboard | Larkon - Responsive Admin Dashboard Template</title>
     <meta name="viewport" content="width=device-width, initial-scale=1.0">
     <meta name="description" content="A fully responsive premium admin dashboard template" />
     <meta name="author" content="Techzaa" />
     <meta http-equiv="X-UA-Compatible" content="IE=edge" />

     <!-- App favicon -->
     <link rel="shortcut icon" href="assets/images/favicon.ico">

     <!-- Vendor css (Require in all Page) -->
     <link href="assets/css/vendor.min.css" rel="stylesheet" type="text/css" />

     <!-- Icons css (Require in all Page) -->
     <link href="assets/css/icons.min.css" rel="stylesheet" type="text/css" />

     <!-- App css (Require in all Page) -->
     <link href="assets/css/app.min.css" rel="stylesheet" type="text/css" />

     <!-- Theme Config js (Require in all Page) -->
     <script src="assets/js/config.js"></script>
     <style>
   

      .filter-section {
          display: flex;
          flex-wrap: wrap;
          gap: 20px;
          align-items: center;
      }

      .date-range {
          display: flex;
          align-items: center;
          gap: 10px;
      }

      label {
          font-weight: 500;
          color: #666;
      }

      .apply-btn {
          background-color: #0066cc;
          color: white;
          padding: 8px 16px;
          border: none;
          border-radius: 4px;
          cursor: pointer;
          font-size: 14px;
      }

      .apply-btn:hover {
          background-color: #0052a3;
      }
     </style>
</head>

<body>

     <!-- START Wrapper -->
     <div class="wrapper">

          <!-- ========== Topbar Start ========== -->
          <%- include('../partials/admin/header') %>

          <!-- Right Sidebar (Theme Settings) -->
          <%- include('../partials/admin/theme') %>
          <!-- ========== Topbar End ========== -->

          <!-- ========== App Menu Start ========== -->
          <%- include('../partials/admin/nav') %>
          <!-- ========== App Menu End ========== -->

          <!-- ==================================================== -->
          <!-- Start right Content here -->
          <!-- ==================================================== -->
          <div class="page-content">

               <!-- Start Container Fluid -->
               <div class="container-fluid">

                    <!-- Start here.... -->
                    <div class="row">
                         <div class="col-xxl-5">
                              <div class="row">
                                   <div class="col-md-4">
                                        <div class="card overflow-hidden">
                                             <div class="card-body">
                                                  <div class="row">
                                                       <div class="col-6">
                                                            <div class="avatar-md bg-soft-primary rounded">
                                                                 <iconify-icon icon="solar:cart-5-bold-duotone" class="avatar-title fs-32 text-primary"></iconify-icon>
                                                            </div>
                                                       </div> <!-- end col -->
                                                       <div class="col-6 text-end">
                                                            <p class="text-muted mb-0 text-truncate">Total Orders</p>
                                                            <h3 class="text-dark mt-1 mb-0"><%= result.totalOrders %></h3>
                                                       </div> <!-- end col -->
                                                  </div> <!-- end row-->
                                             </div> <!-- end card body -->
                                        </div> <!-- end card -->
                                   </div> <!-- end col -->
                                   <div class="col-md-4">
                                        <div class="card overflow-hidden">
                                             <div class="card-body">
                                                  <div class="row">
                                                       <div class="col-6">
                                                            <div class="avatar-md bg-soft-primary rounded">
                                                                 <i class="bx bxs-backpack avatar-title fs-24 text-primary"></i>
                                                            </div>
                                                       </div> <!-- end col -->
                                                       <div class="col-6 text-end">
                                                            <p class="text-muted mb-0 text-truncate">Total Sales</p>
                                                            <h3 class="text-dark mt-1 mb-0"><%= result.totalSalesCount %></h3>
                                                       </div> <!-- end col -->
                                                  </div> <!-- end row-->
                                             </div> <!-- end card body -->
                                        </div> <!-- end card -->
                                   </div> <!-- end col -->
                                   <div class="col-md-4">
                                        <div class="card overflow-hidden">
                                             <div class="card-body">
                                                  <div class="row">
                                                       <div class="col-4">
                                                            <div class="avatar-md bg-soft-primary rounded">
                                                                 <i class="bx bxs-backpack avatar-title fs-24 text-primary"></i>
                                                            </div>
                                                       </div> <!-- end col -->
                                                       <div class="col-8 text-end">
                                                            <p class="text-muted mb-0 text-truncate">Total Amount</p>
                                                            <h3 class="text-dark mt-1 mb-0"><%= result.totalSalesAmount.toFixed(2) %></h3>
                                                       </div> <!-- end col -->
                                                  </div> <!-- end row-->
                                             </div> <!-- end card body -->
                                        </div> <!-- end card -->
                                   </div> <!-- end col -->
                              </div> <!-- end row -->
                         </div> <!-- end col -->
                         <div class="col-xxl-7">
                              <div class="card">
                                   <div class="card-body">
                                        <div class="d-flex justify-content-between align-items-center">
                                             <h4 class="card-title">Order Performance</h4>
                                             <div id="filter-section" class="filter-section">
                                                  <div class="date-range">
                                                      <label for="custom-year" class="text-nowrap">Custom years</label>
                                                      <input type="number" id="custom-year" class="form-control" min="1900" max="2099" step="1"/>
                                                  </div>
                                                  <button class="apply-btn" id="apply-btn">Apply</button>
                                              </div>
                                             <!-- <div>
                                                  <button type="button" class="btn btn-sm btn-outline-light">ALL</button>
                                             </div> -->
                                        </div> <!-- end card-title-->

                                        <div dir="ltr">
                                             <div id="dash-performance-chart" class="apex-charts"></div>
                                        </div>
                                   </div> <!-- end card body -->
                              </div> <!-- end card -->
                         </div> <!-- end col -->
                    </div> <!-- end row -->


                    <div class="card">
                         <div class="card-body">
                             <h5 class="card-title anchor" id="basic">
                              Best Selling Product (top 10) <a class="anchor-link" href="#basic"></a>
                             </h5>

                             <div id="basic-bar" class="apex-charts"></div>
                         </div>
                     </div>


                     <div class="card">
                         <div class="card-body">
                             <h5 class="card-title anchor" id="basic1">
                              Best Selling Category (top 10) <a class="anchor-link" href="#basic1"></a>
                             </h5>

                             <div id="basic-bar1" class="apex-charts"></div>
                         </div>
                     </div>


                    <div class="row">
                         <div class="col">
                              <div class="card">
                                   <div class="card-body">
                                        <div class="d-flex align-items-center justify-content-between">
                                             <h4 class="card-title">
                                                  Recent Orders
                                             </h4>

                                             <a href="/admin/order" class="btn btn-sm btn-soft-primary">
                                                  See more
                                             </a>
                                        </div>
                                   </div>
                                   <!-- end card body -->
                                   <div class="table-responsive table-centered">
                                        <table class="table mb-0">
                                             <thead class="bg-light bg-opacity-50">
                                                  <tr>
                                                       <th class="ps-3">
                                                            Order ID
                                                       </th>
                                                       <th>
                                                            Created at
                                                       </th>
                                                       <th>
                                                            Customer
                                                       </th>
                                                       <th>
                                                            Total
                                                       </th>
                                                       <th>
                                                            Payment Status
                                                       </th>
                                                       <th>
                                                            Items
                                                       </th>
                                                       <th>
                                                            Order Status
                                                       </th>
                                                       <th>
                                                            Action
                                                       </th>
                                                  </tr>
                                             </thead>
                                             <!-- end thead-->
                                             <tbody>
                                                  <% for(let i = 0; i<order.length; i++) { %>
                                                  <tr>
                                                       <td class="ps-3">
                                                            <%= order[i].orderedId %>
                                                       </td>
                                                       <td class="convert-date" data-date="<%= order[i].createdAt %>"></td>
                                                       <td>
                                                            <a href="#" class="link-primary fw-medium"><%= order[i].userId.name %></a>
                                                       </td>
                                                       <td> <%= order[i].totalAmount %></td>
                                                       <td>
                                                            <% if(order[i].paymentStatus === 'Pending') { %>
                                                                 <span class="badge bg-light text-dark  px-2 py-1 fs-13">Pending</span>
                                                            <% } else if(order[i].paymentStatus === 'Paid') { %>
                                                                 <span class="badge bg-success text-light  px-2 py-1 fs-13">Paid</span>
                                                            <% } else if(order[i].paymentStatus === 'Canceled') { %>
                                                                 <span class="badge bg-danger text-light  px-2 py-1 fs-13">Canceled</span>
                                                            <% } else if(order[i].paymentStatus === 'Failed') { %>
                                                                 <span class="badge bg-light text-danger  px-2 py-1 fs-13">Failed</span>
                                                            <% } else if(order[i].paymentStatus === 'Refunded') { %>
                                                                 <span class="badge bg-light text-dark  px-2 py-1 fs-13">Refunded</span>
                                                            <% } %> 
                                                       </td>
                                                       <td><%= order[i].items.length %> </td>
                                                       <td> 
                                                            <% if(order[i].orderStatus === 'Pending') { %>
                                                                 <span class="badge border border-secondary text-secondary  px-2 py-1 fs-13">Pending</span>
                                                            <% } else if(order[i].orderStatus === 'Confirmed') { %>
                                                                 <span class="badge border border-warning text-warning  px-2 py-1 fs-13">Confirmed</span>
                                                            <% } else if(order[i].orderStatus === 'Shipped') { %>
                                                                 <span class="badge border border-warning text-warning  px-2 py-1 fs-13">Shipped</span>
                                                            <% } else if(order[i].orderStatus === 'Delivered') { %> 
                                                                 <span class="badge border border-success text-success  px-2 py-1 fs-13">Delivered</span>
                                                            <% } else if(order[i].orderStatus === 'Canceled') { %>
                                                                 <span class="badge border border-danger text-danger  px-2 py-1 fs-13">Canceled</span>
                                                            <% } %>      
                                                       </td>
                                                       <td>
                                                            <div class="d-flex gap-2">
                                                                 <a href="/admin/orderDetails?id=<%= order[i]._id %>" class="btn btn-light btn-sm"><iconify-icon icon="solar:eye-broken" class="align-middle fs-18"></iconify-icon></a>
                                                            </div>
                                                       </td>
                                                  </tr>
                                                  <% } %>
                                             </tbody>
                                             <!-- end tbody -->
                                        </table>
                                        <!-- end table -->
                                   </div>
                                   <!-- table responsive -->
                              </div>
                              <!-- end card -->
                         </div>
                         <!-- end col -->
                    </div> <!-- end row -->

               </div>
               <!-- End Container Fluid -->

               <!-- ========== Footer Start ========== -->
               <%- include('../partials/admin/footer') %>
               <!-- ========== Footer End ========== -->

          </div>
          <!-- ==================================================== -->
          <!-- End Page Content -->
          <!-- ==================================================== -->

     </div>
     <!-- END Wrapper -->

     <!-- Vendor Javascript (Require in all Page) -->
     <script src="assets/js/vendor.js"></script>

     <!-- App Javascript (Require in all Page) -->
     <script src="assets/js/app.js"></script>

     <!-- Vector Map Js -->
     <script src="assets/vendor/jsvectormap/js/jsvectormap.min.js"></script>
     <script src="assets/vendor/jsvectormap/maps/world-merc.js"></script>
     <script src="assets/vendor/jsvectormap/maps/world.js"></script>

     <!-- Dashboard Js -->
     <script src="assets/js/pages/dashboard.js"></script>

     <script>
         
          // Reference to the chart instance
          let chart;

          // Reference to the Back button
          const backButton = document.createElement("button");
          backButton.innerText = "Back to Year Chart";
          backButton.style.display = "none"; // Hidden by default
          backButton.style.position = "absolute";
          backButton.style.top = "10px";
          backButton.style.right = "10px";
          backButton.style.padding = "10px 15px";
          backButton.style.backgroundColor = "#ff6c2f";
          backButton.style.color = "white";
          backButton.style.border = "none";
          backButton.style.borderRadius = "5px";
          backButton.style.cursor = "pointer";
          backButton.style.zIndex = "1000";

          document.querySelector("#dash-performance-chart").parentElement.appendChild(backButton);


          backButton.addEventListener("click", function () {
               const year = document.getElementById('custom-year').value;
               renderYearlyChart(year);
          });


          // Function to render the yearly chart
          async function renderYearlyChart(year) {
               try {
                    const response = await fetch(`/admin/orderYearlyChart?year=${year}`);
                    const data = await response.json();
                    if(!response.ok) {
                         throw new Error(data.message);
                    }
                    if(data.success) {
                         const yearlyOptions = {
                              series: [
                              {
                                   name: "Order Count",
                                   type: "bar",
                                   data: data.orderCounts,
                              },
                              ],
                              chart: {
                                   height: 313,
                                   type: "line",
                                   toolbar: {
                                        show: false,
                                   },
                                   events: {
                                        dataPointSelection: function (event, chartContext, { dataPointIndex }) {
                                             const selectedMonth = dataPointIndex + 1; 
                                             fetchData(selectedMonth, year); 
                                        },
                                   },
                              },
                              xaxis: {
                                   categories: [
                                        "Jan",
                                        "Feb",
                                        "Mar",
                                        "Apr",
                                        "May",
                                        "Jun",
                                        "Jul",
                                        "Aug",
                                        "Sep",
                                        "Oct",
                                        "Nov",
                                        "Dec",
                                   ],
                                   axisTicks: {
                                        show: false,
                                   },
                                   axisBorder: {
                                        show: false,
                                   }, 
                              },
                              stroke: {
                                        dashArray: [0],
                                        width: [0,2],
                                        curve: 'smooth'
                                   },
                                   fill: {
                                        opacity: [1, 1],
                                        type: ['solid'],
                                        gradient: {
                                             type: "vertical",
                                             inverseColors: false,
                                             opacityFrom: 0.5,
                                             opacityTo: 0,
                                             stops: [0, 90]
                                        },
                                   },
                                   markers: {
                                        size: [0],
                                        strokeWidth: 2,
                                        hover: {
                                             size: 4,
                                        },
                                   },
                                   yaxis: {
                                   min: 0,
                                   axisBorder: {
                                        show: false,
                                   }
                              },
                              legend: {
                                   show: true,
                                   horizontalAlign: "center",
                                   offsetX: 0,
                                   offsetY: 5,
                                   markers: {
                                        width: 9,
                                        height: 9,
                                        radius: 6,
                                   },
                                   itemMargin: {
                                        horizontal: 10,
                                        vertical: 0,
                                   },
                              },
                              plotOptions: {
                                   bar: {
                                        columnWidth: "30%",
                                        barHeight: "70%",
                                        borderRadius: 3,
                                   },
                              },  
                              grid: {
                                   show: true,
                                   strokeDashArray: 3,
                                   xaxis: {
                                        lines: {
                                        show: false,
                                        },
                                   },
                                   yaxis: {
                                        lines: {
                                        show: true,
                                        },
                                   },
                                   padding: {
                                        top: 0,
                                        right: -2,
                                        bottom: 0,
                                        left: 10,
                                   },
                              },
                              colors: ["#ff6c2f"],
                         };
                         if (chart) {
                              chart.destroy();
                         }
                         chart = new ApexCharts(document.querySelector("#dash-performance-chart"), yearlyOptions);
                         chart.render();
                         backButton.style.display = "none";
                         document.getElementById('filter-section').style.display = 'flex';
                    }    
               } catch (error) {
                    console.log(error)
                    Swal.fire({
                         position: "top-end",
                         icon: "error",
                         title: "Oops...",
                         text: error.message,
                         showConfirmButton: false,
                         timer: 1500,
                         customClass: {
                              popup: 'custom-swal-popup'
                         }
                    });
               }
          }

          function currentYearChart() {
               const currentYear = new Date().getFullYear();
               document.getElementById('custom-year').value = currentYear;
               renderYearlyChart(currentYear);
          }
          currentYearChart();

          // Function to render the monthly chart
     function renderMonthlyChart(dailyCounts, selectedMonth, selectedYear) {
          const daysInMonth = new Date(new Date().getFullYear(), selectedMonth, 0).getDate();
          const categories = Array.from({ length: daysInMonth }, (_, i) => (i + 1).toString()); // Days 1-31

          const monthlyOptions = {
               series: [
               {
                    name: `Daily Order Count for Month ${selectedMonth}`,
                    type: "bar",
                    data: dailyCounts,
               },
               ],
               chart: {
               height: 313,
               type: "bar",
               toolbar: {
                    show: false,
               },
               },
               xaxis: {
               categories: categories,
               
                    axisTicks: {
                         show: false,
                    },
                    axisBorder: {
                         show: false,
                    }, 
               },
               yaxis: {
                    min: 0,
                    axisBorder: {
                         show: false,
                    }
               },
               colors: ["#ff6c2f"],
          };

          // Destroy the previous chart if it exists
          if (chart) {
               chart.destroy();
          }

          // Render the monthly chart
          chart = new ApexCharts(document.querySelector("#dash-performance-chart"), monthlyOptions);
          chart.render();
          // Show the Back button
          backButton.style.display = "block";
          backButton.innerText = `${selectedYear} Year Chart`;
          document.getElementById('filter-section').style.display = 'none';
     }

          // Fetch data for the selected month
     async function fetchData(selectedMonth, selectedYear) {
          try {
               const response = await fetch(`/admin/orderMonthChart?selectedMonth=${selectedMonth}&selectedYear=${selectedYear}`);
               const data = await response.json();
               if (!response.ok) {
               throw new Error(data.message || "Failed to fetch daily order counts");
               }
               if (data.success) {
                    renderMonthlyChart(data.dailyCounts, selectedMonth, selectedYear);
               }
          } catch (error) {
               Swal.fire({
                    position: "top-end",
                    icon: "error",
                    title: "Oops...",
                    text: error.message,
                    showConfirmButton: false,
                    timer: 1500,
                    customClass: {
                         popup: 'custom-swal-popup'
                    }
               });
          }
     }



          const colors = ["#1c84ee"];

          // Function to fetch top 10 products
          async function fetchTopProducts() {
               try {
                    const response = await fetch("/admin/top-products");
                    const result = await response.json();
                    if (!response.ok) { 
                         throw new Error(result.message || "Failed to fetch top products");
                    }
                    if (result.success) {
                         renderTopProductsChart(result.data);
                    }
               } catch (error) {
                    Swal.fire({
                         position: "top-end",
                         icon: "error",
                         title: "Oops...",
                         text: error.message,
                         showConfirmButton: false,
                         timer: 1500,
                         customClass: {
                              popup: 'custom-swal-popup'
                         }
                    });
               }
          }

          // Function to render the chart
          function renderTopProductsChart(data) {
               const options = {
               chart: {
                    height: 380,
                    type: "bar",
                    toolbar: {
                    show: false,
                    },
               },
               plotOptions: {
                    bar: {
                    horizontal: true,
                    },
               },
               dataLabels: {
                    enabled: false,
               },
               series: [
                    {
                    name: "Sales",
                    data: data.map((product) => product.totalSold),
                    },
               ],
               colors: colors,
               xaxis: {
                    categories: data.map((product) => product.productName),
               },
               states: {
                    hover: {
                    filter: "none",
                    },
               },
               grid: {
                    borderColor: "#f1f3fa",
               },
               };

               const chart = new ApexCharts(
               document.querySelector("#basic-bar"),
               options
               );

               chart.render();
          }

          // Fetch and render data on page load
          fetchTopProducts();
   



     document.addEventListener("DOMContentLoaded", function () {
          const colors = ["#1c84ee"];

     // Fetch top 10 selling categories from the server
          async function fetchTopCategories() {
               try {
                    const response = await fetch("/admin/top-categories");
                    const result = await response.json();
                    if (!response.ok) {
                         throw new Error(result.message || "Failed to fetch data");
                    } 
                    if (result.success) {
                         renderCategoriesChart(result.data);
                    }
               } catch (error) {
                    Swal.fire({
                         position: "top-end",
                         icon: "error",
                         title: "Oops...",
                         text: error.message,
                         showConfirmButton: false,
                         timer: 1500,
                         customClass: {
                              popup: 'custom-swal-popup'
                         }
                    });
               }
          }

          // Render the chart with the fetched data
          function renderCategoriesChart(data) {
          const options = {
               chart: {
               height: 380,
               type: "bar",
               toolbar: { show: false },
               },
               plotOptions: {
                    bar: { horizontal: true },
               },
               dataLabels: {
                    enabled: false,
               },
               series: [
                    {
                         name: "Sales",
                         data: data.map((category) => category.totalSold),
                    },
               ],
               colors: colors,
               xaxis: {
                    categories: data.map((category) => category.categoryName),
               },
               states: {
                    hover: { filter: "none" },
               },
               grid: {
                    borderColor: "#f1f3fa",
               },
          };

          const chart = new ApexCharts(
               document.querySelector("#basic-bar1"),
               options
          );

          chart.render();
     }

          // Fetch and render the data on page load
          fetchTopCategories();
     });

     function covertDate(element, newDate) {
          const date = new Date(newDate)
          const convertedDate = date.getDate() +  " " + date.toLocaleString('default', { month: 'short' }) + " " + date.getFullYear();
          element.innerHTML = convertedDate;
     }
     document.addEventListener('DOMContentLoaded', () => {
          const dateElem = document.querySelectorAll('.convert-date');
          dateElem.forEach((element) => {
               const date = element.getAttribute('data-date');
               covertDate(element, date)
          })
     });

     async function logout() {
          try {
               const response = await fetch('/admin/logout', {method: 'POST'})
               const data = await response.json();
               if(!response.ok) {
                    throw new Error(data.message);
               }
               if(data.success) {
                    window.location.href = '/admin/login'
               }
          } catch (error) {
               Swal.fire({
                    position: "top-end",
                    icon: "error",
                    title: "Oops...",
                    text: error.message,
                    showConfirmButton: false,
                    timer: 1500,
                    customClass: {
                         popup: 'custom-swal-popup'
                    }
               });
          }
     }

     document.getElementById('logout-btn').addEventListener('click', logout);

     document.getElementById('apply-btn').addEventListener('click', customChartbyYear);
     function customChartbyYear() {
         const year = document.getElementById('custom-year').value;
         if(year>1900 && year<2099) {
          renderYearlyChart(year);
         }
     }

      </script>

</body>


<!-- Mirrored from techzaa.in/larkon/admin/index.html by HTTrack Website Copier/3.x [XR&CO'2014], Tue, 03 Dec 2024 05:42:46 GMT -->
</html>