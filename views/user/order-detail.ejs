<!doctype html>
<html lang="en">


<!-- Mirrored from risingtheme.com/html/demo-suruchi-v1/suruchi/my-account.html by HTTrack Website Copier/3.x [XR&CO'2014], Sat, 23 Nov 2024 05:25:17 GMT -->
<head>
  <meta charset="utf-8">
  <title>Suruchi - My Account</title>
  <meta name="description" content="Morden Bootstrap HTML5 Template">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="shortcut icon" type="image/x-icon" href="img/favicon.ico">
    
   <!-- ======= All CSS Plugins here ======== -->
  <link rel="stylesheet" href="css/plugins/swiper-bundle.min.css">
  <link rel="stylesheet" href="css/plugins/glightbox.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Jost:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,300;1,400;1,500;1,600;1,700;1,800;1,900&amp;display=swap" rel="stylesheet">

  <!-- Plugin css -->
  <link rel="stylesheet" href="css/vendor/bootstrap.min.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <!-- Custom Style CSS -->
  <link rel="stylesheet" href="css/style.css">
<style>
  .addre-details-cont {
    position: relative;
  }
  .return-indi-modal,
  .return-modal {
    position: absolute;
    left: 30%;
    display: none;
  }

  .return-text,
  .return-btn,
  .confirm-cont {
    position: absolute;
    top: 5;
    right: 2%;
    font-size: 15px;
  }
  .cancel-btn {
    position: absolute;
    top: 5%;
    right: 2%;
    width: 100px;
    height: 35px;
    font-size: 15px;
  }
  .custom-swal-popup .swal2-html-container {
    font-size: 20px;
}
 .individual-item {
    display: none;
    background-color: #F5F5F5;
    position: absolute;
    top: 30%;
    left: 25%;
    padding: 20px;
    width: 520px;
    border-radius: 4px;
 }
 .order-details-cont {
    position: relative;
 }
 .item-image {
    object-fit: cover;
   width: 100%;
   height: 250px;
   overflow: hidden;
}

.item-close-btn {
    position: absolute;
    right: 0;
    top: 0;
}



.display-none {
    display: none;
}
.item-cancel {
    height: 40px;
}
</style>
</head>

<body>
    <!-- Start header area -->
    <%- include('../partials/user/header') %>
    <!-- End header area --> 

    <main class="main__content_wrapper">

        <!-- Start breadcrumb section -->
        <section class="breadcrumb__section breadcrumb__bg">
            <div class="container">
                <div class="row row-cols-1">
                    <div class="col">
                        <div class="breadcrumb__content text-center">
                            <h1 class="breadcrumb__content--title text-white mb-25">My Account</h1>
                            <ul class="breadcrumb__content--menu d-flex justify-content-center">
                                <li class="breadcrumb__content--menu__items"><a class="text-white" href="/">Home</a></li>
                                <li class="breadcrumb__content--menu__items"><a class="text-white" href="/orders">Order</a></li>
                                <li class="breadcrumb__content--menu__items"><span class="text-white">Order Details</span></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!-- End breadcrumb section -->
        
        <!-- my account section start -->
        <section class="my__account--section section--padding">
            <div class="container-fluid">
                <div class="my__account--section__inner border-radius-10 d-flex addre-details-cont order-details-cont">

                  <div class="customer__information--area border-radius-5 container-fluid">
                    <div class="d-flex justify-content-between align-items-center gap-1">
                        <h3 class="customer__information--title h4">Order Details</h3>
                        <div>
                            <h4 class="me-3 mb-3">Date : <span id="order-date" data-date="<%= order.createdAt %>"></span></h4>
                            <button onclick="invoicePDFDoc(event, '<%= order._id %>')" class="btn btn-primary">
                                download invoice
                            </button>
                            <% if(order.paymentMethod === 'razorpay' && (order.paymentStatus === 'Pending' || order.paymentStatus === 'Failed')) { %>
                            <button class="btn btn-success" id="razorpay-pay-btn">
                                Continue Pay
                            </button>
                            <% } %>
                        </div>
                    </div>
                 
                    <div class="customer__information--inner d-flex">
                        <div class="customer__information--list">
                            <div class="d-flex">
                                <h4 class="h4 me-4">Order</h4>
                                <h4 id="order-id" data-id="<%= order._id %>" class="h5" style="width: 200px;"><%= order.orderedId %></h4>
                            </div>
                            
                            <div class="customer__information--step">
                                <h4 class="customer__information--subtitle h5">Payment method</h4>
                                <ul>
                                    <% if(order.paymentMethod === 'cod') { %>
                                    <li><span class="customer__information--text">Cash on Delivery</span></li>
                                    <% } else if(order.paymentMethod === 'razorpay') { %>
                                    <li><span class="customer__information--text"></span>Razorpay</li>
                                    <% } else if(order.paymentMethod === 'wallet') { %>
                                        <li><span class="customer__information--text">Wallet</span></li>
                                    <% } %>
                                </ul>
                            </div>
                            <div class="customer__information--step">
                                <h4 class="customer__information--subtitle h5">Payment Status</h4>
                                <ul>
                                    <li><span id="payment-status" class="customer__information--text"><%= order.paymentStatus %></span></li>
                                </ul>
                            </div>
                            <div class="customer__information--step">
                                <h4 class="customer__information--subtitle h5">Order Status</h4>
                                <ul>
                                    <li><span id="order-status" class="customer__information--text"><%= order.orderStatus %></span></li>
                                </ul>
                            </div>
                        </div>
                        <div class="customer__information--list" style="margin-top: 45px;">
                            <div class="customer__information--step">
                                <h4 class="customer__information--subtitle h5">Shipping address</h4>
                                <ul>
                                    <li><span class="customer__information--text"><%= order.address.name %></span></li>
                                    <li><span class="customer__information--text"><%= order.address.phone %></span></li>
                                    <li><span class="customer__information--text"><%= order.address.locality %></span></li>
                                    <li><span class="customer__information--text"><%= order.address.address %></span></li>
                                    <li><span class="customer__information--text"><%= order.address.place %></span></li>
                                    <li><span class="customer__information--text"><%= order.address.state %> - <%= order.address.pincode %></span></li>
                                </ul>
                            </div>
                        </div>
                        <div class="customer__information--list">
                      </div>
                      <div class="customer__information--list">
                    </div>
                    </div>
                </div>
                <div class="checkout__sidebar sidebar">
                  <div class="cart__table checkout__product--table">
                      <table class="cart__table--inner">
                          <tbody class="cart__table--body">
                              <% for(let i = 0; i<order.items.length; i++) { %>
                              <tr class="cart__table--body__items" onclick="showItem(event, '<%= i %>')">
                                  <td class="cart__table--body__list">
                                      <div class="product__image two  d-flex align-items-center">
                                          <div class="product__thumbnail border-radius-5">
                                              <a><img id="image-src<%= i %>" class="border-radius-5" src="<%= order.items[i].image %>" alt="cart-product"></a>
                                            <span id="item-quantity<%= i %>" class="product__thumbnail--quantity"><%= order.items[i].quantity %></span>
                                          </div>
                                          <div class="product__description">
                                              <h3 id="item-productName<%= i %>" class="item-status-cls product__description--name h3"><a><%= order.items[i].productId.productName %></a></h3>
                                              <span id="item-color<%= i %>" class="color__variant"><b class="h5">Color:</b>
                                                  <%= order.items[i].color %>
                                              </span>
                                              <span id="item-size<%= i %>" class="color__variant"><b class="h5">Size:</b>
                                                  <%= order.items[i].size %>
                                              </span>
                                          </div>
                                      </div>
                                  </td>
                                  <td class="cart__table--body__list">
                                    <span id="item-price<%= i %>" class="cart__price"><%= order.items[i].price %></span>
                                    <% if(order.items[i].isCanceled) { %>
                                        <h1 id="cancel-tag<%= i %>" class="h4 cancel-tag text-danger">Canceled</h1>
                                    <% } else if(order.items[i].isReturned) { %>
                                        <h1 class="h4 text-danger">Returned</h1>
                                    <% } else if(allRejected || order.items[i].isRejected) { %>
                                        <h1 class="h4 text-danger">Return rejected</h1>
                                    <% } else { %>
                                        <h1 id="cancel-tag<%= i %>" class="h4 d-none cancel-tag text-danger">Canceled</h1>
                                        <h1 id="cancel-tag<%= i %>" class="h4 d-none text-danger">Returned</h1>
                                   <% } %>
                                  </td>
                              </tr>
                              <% } %>
                          </tbody>
                      </table> 
                  </div>
                  <div class="checkout__total">
                      <table class="checkout__total--table">
                          <tbody class="checkout__total--body">
                              <% if(order.appliedCoupon.couponId) { %>
                                <p class="text-success mb-2">coupon applied</p>
                                <tr class="checkout__total--items">
                                    <td class="checkout__total--title text-left">Total Amount</td>
                                    <td class="checkout__total--calculated__text text-right"><%= order.totalAmount %></td>
                                </tr>
                                <tr class="checkout__total--items">
                                <td class="checkout__total--title text-left">Discount Amount</td>
                                <td class="checkout__total--calculated__text text-right"><%= order.appliedCoupon.discountPrice %></td>
                            </tr>
                            <% } else { %>
                                <tr class="checkout__total--items">
                                    <td class="checkout__total--title text-left">Total Amount</td>
                                    <td class="checkout__total--calculated__text text-right"><%= order.totalAmount %></td>
                                </tr>
                            <% } %>
                            <tr class="checkout__total--items">
                                <td class="checkout__total--title text-left">Shipping Cost</td>
                                <td class="checkout__total--calculated__text text-right"><%= order.shippingCost %></td>
                            </tr>
                          </tbody>
                          <tfoot class="checkout__total--footer">
                              <tr class="checkout__total--footer__items">
                                  <td class="checkout__total--footer__title checkout__total--footer__list text-left">Payable Amount</td>
                                  <td id="total-amount" class="checkout__total--footer__amount checkout__total--footer__list text-right"><%= order.payableAmount %></td>
                              </tr>
                          </tfoot>
                      </table>
                  </div>
                </div>
                <% if(order.orderStatus === 'Pending' || order.orderStatus === 'Confirmed' || order.orderStatus === 'Shipped') { %>
                <button id="cancel-btn" class="btn btn-danger cancel-btn" type="button">Cancel</button>
                <% } else if(order.orderStatus === 'Delivered' && !allRejected && !aldreadyChangeStatus ) { %>
                    <% if(returnAllitem) { %>
                        <button id="return-btn" class="checkout__discount--code__btn primary__btn border-radius-5 return-btn d-none" type="button">Return</button>
                    <div class="d-flex align-items-center confirm-cont" id="confirm-cont">
                        <h4 class="text-success text-nowrap">Return Requested</h4>
                        <button id="cancel-return-btn" class="checkout__discount--code__btn primary__btn border-radius-5"
                        type="button">Cancel Request</button>
                    </div>
                    <% } else { %>
                        <button id="return-btn" class="checkout__discount--code__btn primary__btn border-radius-5 return-btn" type="button">Return</button>
                    <div class="d-none align-items-center confirm-cont" id="confirm-cont">
                        <h4 class="text-success text-nowrap">Return Requested</h4>
                        <button id="cancel-return-btn" class="checkout__discount--code__btn primary__btn border-radius-5"
                        type="button">Cancel Request</button>
                    </div>
                    <% } %>
                <% } %>
                  

                <!-- modal for individual cancel -->
                <% for(let i = 0; i < order.items.length; i++) { %>
                <div class="individual-item" id="individual-item<%= i %>">
                    <div class="product__image two d-flex" style="position: relative;">
                        <button type="button" class="btn btn-close item-close-btn" onclick="hideItem(event, '<%= i %>')"></button>
                        <div class="product__thumbnail border-radius-5" style="width: 200px; height: 250px;">
                            <a><img class="border-radius-5 item-image" src="<%= order.items[i].image %>" alt="cart-product"></a>
                        </div>
                        <div class="product__description mt-2 ms-2">
                            <h3 class="product__description--name h3">Name: <span id="item-name<%= i %>"><%= order.items[i].productId.productName %></span></h3>
                            <p class="color__variant"><b class="h5">Color: </b><span id="item-color<%= i %>"><%= order.items[i].color %></span></p>
                            <p class="color__variant d-block"><b class="h5">Size: </b><span id="item-size<%= i %>"><%= order.items[i].size %></span></p>
                            <p class="color__variant me-3"><b class="h5">Quantity: </b> <span id="item-qty<%= i %>" class="d-inline"><%= order.items[i].quantity %></span></p>
                            <p class="color__variant d-block"><b class="h5">Price: </b><span id="item-price<%= i %>"><%= order.items[i].price %></span></p>
                            <!-- <div class="row" style="margin-top: 60px;"> -->
                                <% if(order.items[i].canceledItems > 0) { %>
                                    <div id="item-status<%= i %>" class="">
                                        <p class="text-danger"><span id="cancel-no<%= i %>"><%= order.items[i].canceledItems %></span> Item Canceled</p>
                                    </div>
                                    <input type="hidden" id="canceledItem<%= i %>" value="<%= order.items[i].canceledItems %>">
                                <% } else { %>
                                    <div id="item-status<%= i %>" class="d-none">
                                        <p class="text-danger"><span id="cancel-no<%= i %>"></span> Item Canceled</p>
                                    </div>
                                    <input type="hidden" id="canceledItem<%= i %>" value="<%= order.items[i].canceledItems %>">
                                <% } %>
                                <% if(order.items[i].isReturned) { %>
                                    <div class="">
                                        <p class="text-danger">Items Returned</p>
                                    </div>
                                <% } %>
                            <!-- </div> -->
                             <% if(allRejected || order.items[i].isRejected) { %>
                                <h4 class="text-danger text-nowrap">Return request rejected</h4>
                             <% } else if(!order.items[i].isReturned  && order.orderStauts !== 'Returned' && order.orderStatus === 'Delivered' && !allRejected && !order.items[i].isRejected) { %>
                             <% if(returnAllitem) { %>
                                <h4 class="text-success text-nowrap indi-all-return">All item return requested</h4>
                                <h4 id="coupon-indi-text<%= i %>" class="d-none text-success text-nowrap indi-return-text"><span id="return-indi-qty<%= i %>" class="return-indi-qty"></span> Return Confirmed</h4>
                            <% } else { %>
                                <h4 class="d-none text-success text-nowrap indi-all-return">All item return requested</h4>
                                <% if(retItems) { %>
                                    <% let retitem = retItems.find(val => String(val.itemId) === String(order.items[i]._id)) %>
                                    <% if(retitem) { %>
                                        <h4 id="coupon-indi-text<%= i %>" class="text-success text-nowrap indi-return-text"><span id="return-indi-qty<%= i %>" class="return-indi-qty"><%= retitem.quantity %></span> Return requested</h4>
                                    <% } else { %>
                                        <h4 id="coupon-indi-text<%= i %>" class="d-none text-success text-nowrap indi-return-text"><span id="return-indi-qty<%= i %>" class="return-indi-qty"></span> Return requested</h4>
                                    <% } %>
                                <% } else { %>
                                    <h4 id="coupon-indi-text<%= i %>" class="d-none text-success text-nowrap indi-return-text"><span id="return-indi-qty<%= i %>" class="return-indi-qty"></span> Return requested</h4>
                                <% } %>
                            <% } %>
                            <% } %>
                            <% if(!order.items[i].isCanceled && order.orderStatus === 'Pending' || order.orderStatus === 'Confirmed' || order.orderStatus === 'Shipped') { %>
                                <div id="item-cancel-cont<%= i %>" style="margin-top: 60px;" class="item-indi-cancel">
                                <div class="d-flex justify-content-between" style="width: 250px;">
                                    <div id="qty-btn-cont<%= i %>">
                                        <div class="quantity__box">
                                            <button type="button" onclick="decQuantity(event, '<%= i %>')"
                                                class="quantity__value quickview__value--quantity decrease"
                                                aria-label="quantity value">-</button>
                                            <label>
                                                <input type="number" id="qty-input<%= i %>" value="1"
                                                    class="quantity__number quickview__value--number" min="1" max=""/>
                                            </label>
                                            <button type="button" onclick="incQuantity(event, '<%= i %>')" 
                                                class="quantity__value quickview__value--quantity increase"
                                                aria-label="quantity value">+</button>
                                        </div>
                                    </div>
                                    <button class="h4 btn btn-danger" type="button" id="item-cancel-btn<%= i %>" onclick="changeItemstatus(event, '<%= order.items[i]._id %>', '<%= i %>')">Cancel</button>
                                </div>
                                </div>
                            <% } else if(order.orderStatus === 'Delivered' && order.orderStatus !== 'Returned' && !order.items[i].isReturned && !allRejected && !order.items[i].isRejected) { %>
                                <% if(returnAllitem) { %>
                                    <div class="d-none align-items-center confirm-indi-cont" style="margin-top: 30px;" id="confirm-indi-cont<%= i %>">
                                        <button id="item-return-cont<%= i %>" onclick="openReturnModal(event, '<%= i %>', '<%= order.items[i]._id %>')" class="checkout__discount--code__btn primary__btn border-radius-5 item-return-cont"
                                        type="button">Return</button>
                                        <button id="cancel-indi-return<%= i %>" onclick="cancelIndiReturn(event, '<%= i %>', '<%= order.items[i]._id %>')" class="d-none checkout__discount--code__btn primary__btn border-radius-5 cancel-indi-return"
                                        type="button">Cancel request</button>
                                    </div>
                                <% } else { %>
                                    <% if(retItems) { %>
                                        <div class="d-flex align-items-center confirm-indi-cont" style="margin-top: 30px;" id="confirm-indi-cont<%= i %>">
                                            <% if(retItems.some(val => String(val.itemId) === String(order.items[i]._id))) { %>
                                                <button id="item-return-cont<%= i %>" onclick="openReturnModal(event, '<%= i %>', '<%= order.items[i]._id %>')" class="d-none checkout__discount--code__btn primary__btn border-radius-5 item-return-cont"
                                                    type="button">Return</button>
                                                    <button id="cancel-indi-return<%= i %>" onclick="cancelIndiReturn(event, '<%= i %>', '<%= order.items[i]._id %>')" class="checkout__discount--code__btn primary__btn border-radius-5 cancel-indi-return"
                                                    type="button">Cancel request</button>
                                            <% } else { %>
                                                <button id="item-return-cont<%= i %>" onclick="openReturnModal(event, '<%= i %>', '<%= order.items[i]._id %>')" class="checkout__discount--code__btn primary__btn border-radius-5 item-return-cont"
                                                    type="button">Return</button>
                                                    <button id="cancel-indi-return<%= i %>" onclick="cancelIndiReturn(event, '<%= i %>', '<%= order.items[i]._id %>')" class="d-none checkout__discount--code__btn primary__btn border-radius-5 cancel-indi-return"
                                                    type="button">Cancel request</button>
                                            <% } %>
                                        </div>
                                    <% } else { %>
                                        <div class="d-flex align-items-center confirm-indi-cont" style="margin-top: 30px;" id="confirm-indi-cont<%= i %>">
                                            <button id="item-return-cont<%= i %>" onclick="openReturnModal(event, '<%= i %>', '<%= order.items[i]._id %>')" class="checkout__discount--code__btn primary__btn border-radius-5 item-return-cont"
                                            type="button">Return</button>
                                            <button id="cancel-indi-return<%= i %>" onclick="cancelIndiReturn(event, '<%= i %>', '<%= order.items[i]._id %>')" class="d-none checkout__discount--code__btn primary__btn border-radius-5 cancel-indi-return"
                                            type="button">Cancel request</button>
                                        </div>
                                    <% } %>
                                <% } %>
                            <% } %>
                        </div>
                    </div>
                </div>
                <% } %>
                    <div class="my__account--section__inner border-radius-10 pt-5 pb-5 return-modal" id="return-modal" style="width: auto;">
                        <h1 class="h3 mb-4">Return Item</h1>
                        <p class="text-nowrap mb-1">Returning All Products</p>
                        <p class="mb-1">Reason for Return:</p>
                        <div style="width: 300px;">
                            <div class="d-flex justify-content-between">
                                <label class="text-nowrap" for="reason1">Damaged Product</label>
                                <input name="reason" value="1" type="checkbox" id="reason1">
                            </div>
                            <div class="d-flex justify-content-between">
                                <label class="text-nowrap" for="reason2">Wrong Item Delivered</label>
                                <input name="reason" value="2" type="checkbox" id="reason2">
                            </div>
                            <div class="d-flex justify-content-between">
                                <label class="text-nowrap" for="reason3">Not Satisfied with the Product</label>
                                <input name="reason" value="3" type="checkbox" id="reason3">
                            </div>
                            <div class="d-flex justify-content-between">
                                
                            <label for="reason4">Other</label>
                            <input name="reason" value="4" type="checkbox" id="reason4">
                            </div>
                        </div>
                        <div class="d-flex justify-content-between mt-5 mb-0">
                            <button class="btn btn-danger h4" id="return-order-btn" type="button">Confirm Return</button>
                            <button class="btn btn-success h4" type="button" id="return-cancel-btn">Cancel</button>
                        </div>
                    </div>
                    <div class="my__account--section__inner border-radius-10 pt-5 pb-5 return-indi-modal" id="return-indi-modal" style="width: auto;">
                        <h1 class="h3 mb-4">Return Item</h1>
                        <p class="text-nowrap mb-1">Returning Product:</p>
                        <p class="m-0">Name: <span id="return-name"></span></p>
                        <p class="m-0">Price: <span id="return-price"></span></p>
                        <p class="m-0">Quantity: <span id="return-qty"></span></p>
                        <p class="mb-1 mt-3">Reason for Return:</p>
                        <div style="width: 300px;">
                            <div class="d-flex justify-content-between">
                                <label class="text-nowrap" for="reason1-indi">Damaged Product</label>
                                <input name="reason-indi" value="1" type="checkbox" id="reason1-indi">
                            </div>
                            <div class="d-flex justify-content-between">
                                <label class="text-nowrap" for="reason2-indi">Wrong Item Delivered</label>
                                <input name="reason-indi" value="2" type="checkbox" id="reason2-indi">
                            </div>
                            <div class="d-flex justify-content-between">
                                <label class="text-nowrap" for="reason3-indi">Not Satisfied with the Product</label>
                                <input name="reason-indi" value="3" type="checkbox" id="reason3-indi">
                            </div>
                            <div class="d-flex justify-content-between">
                            <label for="reason4-indi">Other</label>
                            <input name="reason-indi"  value="4" type="checkbox" id="reason4-indi">
                            </div>
                        </div>
                        <div class="d-flex justify-content-between mt-5 mb-0">
                            <button class="btn btn-danger h4" id="confirm-indi-return" type="button">Confirm Return</button>
                            <button class="btn btn-success h4" id="indi-return-cancel" type="button" id="return-indi-cancel">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!-- my account section end -->

    </main>

    <!-- Start footer section -->
    <%- include('../partials/user/footer') %>
    <!-- End footer section -->

    <!-- Scroll top bar -->
    <button id="scroll__top"><svg xmlns="http://www.w3.org/2000/svg" class="ionicon" viewBox="0 0 512 512"><path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="48" d="M112 244l144-144 144 144M256 120v292"/></svg></button>
    
  <!-- razorypay script -->
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script> 
  <!-- All Script JS Plugins here  -->
  <script src="js/vendor/popper.js" defer="defer"></script>
  <script src="js/vendor/bootstrap.min.js" defer="defer"></script>
  <script src="js/plugins/swiper-bundle.min.js"></script>
  <script src="js/plugins/glightbox.min.js"></script>

  <!-- Customscript js -->
  <script src="js/script.js"></script>
  <script>
    const orderCancelBtn = document.getElementById('cancel-btn');
    if(orderCancelBtn) {
        async function orderCancellation(event) {
            event.preventDefault();
            try {
                const response = await fetch(`/cancelOrder?id=<%= order._id %>`, { method: 'PATCH' });
                const data = await response.json();
                if(!response.ok) {
                    throw new Error(data.message);
                }
                if(data.success) {
                    Swal.fire({
                    position: "top-end",
                    icon: 'success',
                    title: 'Order canceled successfully.',
                    showConfirmButton: false,
                    timer: 1500,
                    customClass: {
                        popup: 'custom-swal-popup'
                    }
                    })
                    document.querySelectorAll('.cancel-tag').forEach(elem => elem.classList.remove('d-none'))
                    document.getElementById('cancel-btn').style.display = 'none';
                    document.getElementById('payment-status').innerHTML = 'Failed';
                    document.getElementById('order-status').innerHTML = 'Canceled';
                    document.getElementById('total-amount').innerHTML = 0;
                    document.querySelectorAll('.item-indi-cancel').forEach(element => {
                        element.style.display = 'none'
                    })
                }
            } catch (error) {
                Swal.fire({
                    position: "top-end",
                    icon: "error",
                    title: "Oops...",
                    text: error.message,
                    showConfirmButton: false,
                    timer: 1500,
                    customClass: {
                        popup: 'custom-swal-popup'
                    }
                });
            }
        }
        orderCancelBtn.addEventListener('click', orderCancellation)
    } 

    
    function covertDate() {
        const dateElem = document.getElementById('order-date')
        const date = new Date(dateElem.getAttribute('data-date'));
        const convertedDate = date.getDate() +  " " + date.toLocaleString('default', { month: 'short' }) + " " + date.getFullYear();
        dateElem.innerHTML = convertedDate;
    }
    covertDate();

    function showItem(event, id) {
        event.preventDefault();
        document.querySelectorAll('.individual-item').forEach(elem => elem.style.display = 'none');
        document.getElementById(`individual-item${id}`).style.display = 'block';
    }

    function hideItem(event, id) {
        event.preventDefault();
        document.getElementById(`individual-item${id}`).style.display = 'none';
    }

    // fetch for cancel individual item
    async function changeItemstatus(event, itemId, i) {
        event.preventDefault();
        try {
            const quantity = document.getElementById('qty-input'+i).value;
            const orderQty = document.getElementById('item-qty'+i).innerHTML;
            const canQty = document.getElementById('canceledItem'+i).value;
            if(quantity > (orderQty - canQty)) {
                Swal.fire({
                    position: "top-end",
                    icon: "error",
                    title: "Oops...",
                    text: 'Choose valid quantity for cancel orders',
                    showConfirmButton: false,
                    timer: 1500,
                    customClass: {
                        popup: 'custom-swal-popup'
                    }
                });
                return;
            }
            const response = await fetch(`/changeItemstatus?orderId=<%= order._id %>&itemId=${itemId}`, {
                method: 'PATCH',
                headers: {
                    'content-type': 'application/json'
                },
                body: JSON.stringify({quantity})
            });
            const data = await response.json();
            if(!response.ok) {
                if(data.redirectUrl) {
                    return window.location.href = data.redirectUrl;
                }
                throw new Error(data.message);
            }
            if(data.success) {
                Swal.fire({
                    position: "top-end",
                    icon: 'success',
                    title: 'Item canceled successfully.',
                    showConfirmButton: false,
                    timer: 1500,
                    customClass: {
                        popup: 'custom-swal-popup'
                    }
                });
                if(data.isCanceled) {
                    document.getElementById('item-cancel-cont'+i).style.display = 'none';
                    document.getElementById('cancel-tag'+i).classList.remove('d-none');
                } else {
                    document.getElementById('canceledItem'+i).value = data.itemQty;
                    let qtyInp = document.getElementById('qty-input'+i);
                    if(qtyInp.value>data.remainQty) {
                        qtyInp.value = data.remainQty;
                    }
                }
                document.getElementById('item-status'+i).classList.remove('d-none');
                document.getElementById('total-amount').innerHTML = data.payableAmount;
                document.getElementById('payment-status').innerHTML = 'Canceled';
                document.getElementById('order-status').innerHTML = 'Canceled';
                document.getElementById('cancel-btn').style.display = 'none';
                if(data.firstCancel) {
                    document.getElementById('item-status'+i).classList.remove('d-none');
                }
                document.getElementById('cancel-no'+i).innerHTML = data.itemQty;
            }
        } catch (error) {
            Swal.fire({
                position: "top-end",
                icon: "error",
                title: "Oops...",
                text: error.message,
                showConfirmButton: false,
                timer: 1500,
                customClass: {
                    popup: 'custom-swal-popup'
                }
            });
        }
    }

    function incQuantity(event, i) {
        event.preventDefault();
        const quantity = document.getElementById('item-qty'+i).innerHTML;
        const canQty = document.getElementById('canceledItem'+i).value
        const qtyValue = document.getElementById('qty-input'+i).value;
        if(qtyValue < (quantity - canQty)) {
            document.getElementById('qty-input'+i).value++;
        }
    }
    function decQuantity(event, i) {
        event.preventDefault();
        const qtyValue = document.getElementById('qty-input'+i).value;
        if(qtyValue > 1) {
            document.getElementById('qty-input'+i).value--;
        }
    }

   
    const returnBtn = document.getElementById('return-btn');
    if(returnBtn) {
        returnBtn.addEventListener('click', () => {
            document.getElementById('return-modal').style.display = 'block';
        });
    }
  
    const returnCancelBtn = document.getElementById('return-cancel-btn');
    if(returnCancelBtn) {
        returnCancelBtn.addEventListener('click', () => {
            document.getElementById('return-modal').style.display = 'none';
        });
    }

    function openReturnModal(event, i, itemId) {
        document.getElementById('individual-item'+i).style.display = 'none';
        document.getElementById('return-indi-modal').style.display = 'block';
        document.getElementById('return-name').innerHTML = document.getElementById('item-name'+i).innerHTML;
        document.getElementById('return-price').innerHTML = document.getElementById('item-price'+i).innerHTML;
        document.getElementById('return-qty').innerHTML = document.getElementById('item-qty'+i).innerHTML;
        const button = document.getElementById('confirm-indi-return');
        const quantity =  document.getElementById('return-qty').innerHTML;
        const newButton = button.cloneNode(true);
        button.parentNode.replaceChild(newButton, button);

        newButton.addEventListener('click', () => {
            returnConfirmIndi(event, itemId,quantity, i)
        })
    }
    document.getElementById('indi-return-cancel').addEventListener('click', () => {
        document.getElementById('return-indi-modal').style.display = 'none';
    });

    const returnOrderBtn = document.getElementById('return-order-btn');
    if(returnOrderBtn) {
        // all product return function
        async function returnOrder() {
            try {
                let reason = [];
                const reasons = document.getElementsByName('reason');
                reasons.forEach(ele => {
                    if(ele.checked) {
                        reason.push(ele.value);
                    }
                });
                if(reason.length===0) {
                    Swal.fire({
                        position: "top-end",
                        icon: "error",
                        title: "Oops...",
                        text: 'Select your reason for returning',
                        showConfirmButton: false,
                        timer: 1500,
                        customClass: {
                            popup: 'custom-swal-popup'
                        }
                    });
                    return;
                }

                const response = await fetch(`/returnOrder?id=<%= order._id %>`, {
                    method:'POST',
                    headers: {
                        'content-type': 'application/json'
                    },
                    body: JSON.stringify({reason})
                });
                const data = await response.json();
                if(!response.ok) {
                    throw new Error(data.message);
                }
                if(data.success) {
                    Swal.fire({
                        position: "top-end",
                        icon: 'success',
                        title: 'Order return requested.',
                        showConfirmButton: false,
                        timer: 1500,
                        customClass: {
                            popup: 'custom-swal-popup'
                        }
                    });
                    document.getElementById('return-modal').style.display = 'none';
                    document.getElementById('confirm-cont').classList.remove('d-none');
                    document.getElementById('confirm-cont').classList.add('d-flex');
                    document.getElementById('return-btn').classList.add('d-none');
                    document.querySelectorAll('.confirm-indi-cont').forEach(element => {
                        element.classList.remove('d-flex');
                        element.classList.add('d-none');
                    });
                    document.querySelectorAll('.indi-all-return').forEach(element => element.classList.remove('d-none'));
                    document.querySelectorAll('.indi-return-text').forEach(element => element.classList.add('d-none'));
                    document.querySelectorAll('.cancel-indi-return').forEach(element => element.classList.add('d-none'));
                    document.querySelectorAll('.item-return-cont').forEach(element => element.classList.remove('d-none'));
                } 
            } catch (error) {
                Swal.fire({
                    position: "top-end",
                    icon: "error",
                    title: "Oops...",
                    text: error.message,
                    showConfirmButton: false,
                    timer: 1500,
                    customClass: {
                        popup: 'custom-swal-popup'
                    }
                });
            }
        }
        returnOrderBtn.addEventListener('click', returnOrder);
    }

    // all return cancel function
    const cancelReturnBtn = document.getElementById('cancel-return-btn');
    if(cancelReturnBtn) {
        async function returnCancel(event) {
            try {
                event.preventDefault()
                const response = await fetch(`/cancelReturn?id=<%= order._id %>`, {method:'PATCH'});
                const data = await response.json();
                if(!response.ok) {
                    throw new Error(data.message);
                }
                if(data.success) {
                    Swal.fire({
                        position: "top-end",
                        icon: 'success',
                        title: 'order return request canceled.',
                        showConfirmButton: false,
                        timer: 1500,
                        customClass: {
                            popup: 'custom-swal-popup'
                        }
                    });
                    document.getElementById('confirm-cont').classList.remove('d-flex');
                    document.getElementById('confirm-cont').classList.add('d-none');
                    document.getElementById('return-btn').classList.remove('d-none');
                    document.querySelectorAll('.confirm-indi-cont').forEach(element => {
                        element.classList.remove('d-none');
                        element.classList.add('d-flex');
                    });
                    document.querySelectorAll('.indi-all-return').forEach(element => element.classList.add('d-none'));

                } 
            } catch (error) {
                Swal.fire({
                    position: "top-end",
                    icon: "error",
                    title: "Oops...",
                    text: error.message,
                    showConfirmButton: false,
                    timer: 1500,
                    customClass: {
                        popup: 'custom-swal-popup'
                    }
                });
            }
    
        }
        cancelReturnBtn.addEventListener('click', returnCancel);
    }
   
    // individual return function
    async function returnConfirmIndi(event, itemId, quantity, i) { 
        try {
            event.preventDefault()
            let reason = [];
            const reasons = document.getElementsByName('reason-indi');
            reasons.forEach(ele => {
                if(ele.checked) {
                    reason.push(ele.value);
                }
            });
            if(reason.length===0) {
                Swal.fire({
                    position: "top-end",
                    icon: "error",
                    title: "Oops...",
                    text: 'Select your reason for returning',
                    showConfirmButton: false,
                    timer: 1500,
                    customClass: {
                        popup: 'custom-swal-popup'
                    }
                });
                return;
            }
            const response = await fetch(`/returnConfirmInd?id=<%= order._id %>&itemId=${itemId}&qty=${quantity}`, {
                method:'POST',
                headers: {
                    'content-type': 'application/json'
                },
                body: JSON.stringify({reason})
            });
            const data = await response.json();
            if(!response.ok) {
                throw new Error(data.message);
            }
            if(data.success) {
                document.getElementById('return-indi-modal').style.display = 'none';
                Swal.fire({
                    position: "top-end",
                    icon: 'success',
                    title: 'Order return requested.',
                    showConfirmButton: false,
                    timer: 1500,
                    customClass: {
                        popup: 'custom-swal-popup'
                    }
                });
                if(data.isAllItem) {
                    document.getElementById('item-return-cont'+i).classList.add('d-none');
                }
                document.getElementById('cancel-indi-return'+i).classList.remove('d-none');
                document.getElementById('coupon-indi-text'+i).classList.remove('d-none');
                document.getElementById('return-indi-qty'+i).innerHTML = data.quantity;
            } 
        } catch (error) {
            Swal.fire({
                position: "top-end",
                icon: "error",
                title: "Oops...",
                text: error.message,
                showConfirmButton: false,
                timer: 1500,
                customClass: {
                    popup: 'custom-swal-popup'
                }
            });
        }
    }

    // individuat cancel return function
    async function cancelIndiReturn(event, i, itemId) {
        try {
            event.preventDefault()
            const response = await fetch(`/cancelIndiReturn?id=<%= order._id %>&itemId=${itemId}`, {method:'PATCH'});
            const data = await response.json();
            if(!response.ok) {
                throw new Error(data.message);
            }
            if(data.success) {
                Swal.fire({
                    position: "top-end",
                    icon: 'success',
                    title: 'Order return request Canceled.',
                    showConfirmButton: false,
                    timer: 1500,
                    customClass: {
                        popup: 'custom-swal-popup'
                    }
                });
                document.getElementById('item-return-cont'+i).classList.remove('d-none');
                document.getElementById('cancel-indi-return'+i).classList.add('d-none');
                document.getElementById('coupon-indi-text'+i).classList.add('d-none');
            } 
        } catch (error) {
            Swal.fire({
                position: "top-end",
                icon: "error",
                title: "Oops...",
                text: error.message,
                showConfirmButton: false,
                timer: 1500,
                customClass: {
                    popup: 'custom-swal-popup'
                }
            });
        }
    }


    async function invoicePDFDoc(event, id) {
        event.preventDefault();
        try {
            const response = await fetch(`/order/${id}/invoice`);
            if(!response.ok) {
                const data = await response.json();
                throw new Error(data.message);
            }
            const blob = await response.blob();
            
            const url = window.URL.createObjectURL(blob);

            const a = document.createElement('a');
            a.href = url;
            a.download = `invoice_${id}.pdf`; // Set the download file name
            document.body.appendChild(a);
            a.click();

            // Clean up
            a.remove();
            window.URL.revokeObjectURL(url);
        } catch (error) {
            Swal.fire({
                position: "top-end",
                icon: "error",
                title: "Oops...",
                text: error.message,
                showConfirmButton: false,
                timer: 1500,
                customClass: {
                    popup: 'custom-swal-popup'
                }
            });
        }
    }

    const razorpayPayBtn = document.getElementById('razorpay-pay-btn');
    if(razorpayPayBtn) {
        async function continueRazorpay(event) {
            event.preventDefault()
            try {
                const response = await fetch('/continue-razorpay?orderId=<%= order._id %>', {method: 'POST'});
                const data = await response.json();
                if(!response.ok) {
                    throw new Error(data.message);
                }
                if(data.success) {
                    const options = {
                        key: data.razorpayId,
                        amount: data.amount,
                        currency: data.currency,
                        name: 'GYM CLUB',
                        description: 'Test Transaction',
                        order_id: data.razorpayOrderId,
                        theme: {
                            color: '#F37254'
                        },
                        handler: async function (response) {
                            try {
                                const res = await fetch(`/verifyPayment?orderId=${data.orderId}`, {
                                    method: 'POST',
                                    headers: {
                                    'Content-Type': 'application/json',
                                    'x-razorpay-signature': response.razorpay_signature
                                    },
                                    body: JSON.stringify({
                                    razorpay_order_id: response.razorpay_order_id,
                                    razorpay_payment_id: response.razorpay_payment_id
                                    })
                                });
                                const verifydata = await res.json();
                                if(!res.ok) {
                                    if(verifydata.redirectUrl) {
                                        window.location.href = verifydata.redirectUrl;
                                    }
                                    throw new Error(verifydata.message);
                                }
                                if(verifydata.success) {
                                    event.target.style.display = 'none';
                                    document.getElementById('payment-status').innerHTML = 'Paid';
                                }
                            } catch (error) {
                                Swal.fire({
                                    position: "top-end",
                                    icon: "error",
                                    title: "Oops...",
                                    text: error.message,
                                    showConfirmButton: false,
                                    timer: 1500,
                                    customClass: {
                                        popup: 'custom-swal-popup'
                                    }
                                });
                            }
                        },
                        modal: {
                            ondismiss: async () => {
                                try {
                                    const res = await fetch(`/paymentStatus?orderId=${data.orderId}`);
                                    const PayStatus = await res.json();
                                    if(!res.ok) {
                                        throw new Error(PayStatus.message || 'Payment status fetch error');
                                    }
                                    if(PayStatus.success) {
                                        // alert('success')
                                        document.getElementById('payment-status').innerHTML = PayStatus.paymentStatus;
                                    }   
                                } catch (error) {
                                    Swal.fire({
                                        position: "top-end",
                                        icon: "error",
                                        title: "Oops...",
                                        text: error.message,
                                        showConfirmButton: false,
                                        timer: 1500,
                                        customClass: {
                                            popup: 'custom-swal-popup'
                                        }
                                    });
                                }
                            } 
                        }
                    }
                    const rzp = new Razorpay(options);
                    rzp.open();
                }
            
            } catch (error) {
                Swal.fire({
                    position: "top-end",
                    icon: "error",
                    title: "Oops...",
                    text: error.message,
                    showConfirmButton: false,
                    timer: 1500,
                    customClass: {
                        popup: 'custom-swal-popup'
                    }
                });
            }
        }
        razorpayPayBtn.addEventListener('click', continueRazorpay);
    }
    

  </script>
</body>

<!-- Mirrored from risingtheme.com/html/demo-suruchi-v1/suruchi/my-account.html by HTTrack Website Copier/3.x [XR&CO'2014], Sat, 23 Nov 2024 05:25:18 GMT -->
</html>