<!doctype html>
<html lang="en">


<!-- Mirrored from risingtheme.com/html/demo-suruchi-v1/suruchi/my-account-2.html by HTTrack Website Copier/3.x [XR&CO'2014], Sat, 23 Nov 2024 05:25:38 GMT -->
<head>
  <meta charset="utf-8">
  <title>Suruchi - My Account</title>
  <meta name="description" content="Morden Bootstrap HTML5 Template">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="shortcut icon" type="image/x-icon" href="assets/img/favicon.ico">
    
   <!-- ======= All CSS Plugins here ======== -->
  <link rel="stylesheet" href="assets/css/plugins/swiper-bundle.min.css">
  <link rel="stylesheet" href="assets/css/plugins/glightbox.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Jost:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,300;1,400;1,500;1,600;1,700;1,800;1,900&amp;display=swap" rel="stylesheet">

  <!-- Plugin css -->
  <link rel="stylesheet" href="assets/css/vendor/bootstrap.min.css">

  <!-- Custom Style CSS -->
  <link rel="stylesheet" href="assets/css/style.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
    .edit-modal,
    .change-passModal,
    .otp-modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1000; /* Sit on top */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    }
    .edit-modal,
    .change-passModal {
        padding-top: 100px; /* Location of the box */
    }

    .otp-modalContent {
        border: 1px solid #888;
        width: 100%;
        background-color: white;
        height: 100%;
    }
    /* Modal Content */
    .modal-editcontent {
        margin: auto;
        border: 1px solid #888;
        width: 50%;
    }
    .modal-passcontent {
        margin: auto;
        border: 1px solid #888;
        width: 40%;
    }


    /* The Close Button */
    .close-btn {
        color: #aaaaaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
        margin: 15px;
    }

    .close-btn:hover,
    .close-btn:focus {
        color: #000;
        text-decoration: none;
        cursor: pointer;
    }
    .edit-profile-col {
        width: 100%;
    }
    .custom-swal-popup .swal2-html-container {
        font-size: 20px;
    }
    .error-message{
        display: none;
    }
    .edit-save,
    .name-save,
    .resend-disabled {
        pointer-events: none;
        opacity: 0.6;
    }
    .password-wrapper {
      position: relative;
      display: flex;
      align-items: center;
    }
    .eye-button {
        position: absolute;
        right: 10px;
        background: none;
        border: none;
        cursor: pointer;
        padding: 5px;
        font-size: 18px; 
        outline: none;
    }

    .eye {
        width: 20px;
        height: 20px;
        display: block;
        background-repeat: no-repeat;
        background-size: contain;
    }
    .open-eye {
        background-image: url('https://cdn-icons-png.flaticon.com/512/159/159604.png'); /* Open eye icon */
    }

    .closed-eye {
        background-image: url('https://cdn-icons-png.flaticon.com/512/565/565655.png'); /* Closed eye icon */
    }
    
    #logout-btn {
        background-color: transparent;
        border: none;
        padding: 0;
    }


    </style>
</head>

<body>
    <!-- Start preloader -->
    <%- include('../partials/user/preloader') %>
    <!-- End preloader -->

    <!-- Start header area -->
    <%- include('../partials/user/header') %>
    <!-- End header area --> 

    <main class="main__content_wrapper">

        <!-- Start breadcrumb section -->
        <section class="breadcrumb__section breadcrumb__bg">
            <div class="container">
                <div class="row row-cols-1">
                    <div class="col">
                        <div class="breadcrumb__content text-center">
                            <h1 class="breadcrumb__content--title text-white mb-25">My Account</h1>
                            <ul class="breadcrumb__content--menu d-flex justify-content-center">
                                <li class="breadcrumb__content--menu__items"><a class="text-white" href="/">Home</a></li>
                                <li class="breadcrumb__content--menu__items"><span class="text-white">Profile</span></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!-- End breadcrumb section -->
        
        <!-- my account section start -->
        <section class="my__account--section section--padding">
            <div class="container">
                <div class="my__account--section__inner border-radius-10 d-flex">
                    <div class="account__left--sidebar">
                        <h2 class="account__content--title h3 mb-20">My Account</h2>
                        <ul class="account__menu">
                            <li class="account__menu--list active"><a href="#">Profile Information</a></li>
                            <li class="account__menu--list"><a href="/orders">Orders</a></li>
                            <li class="account__menu--list"><a href="/address">Addresses</a></li>
                            <li class="account__menu--list"><a href="/wishlist">Wishlist</a></li>
                            <li class="account__menu--list"><a href="/wallet">Wallet</a></li>
                            <li class="account__menu--list"><button id="logout-btn" class="h4">Log Out</button></li>
                        </ul>
                    </div>
                    <div class="account__wrapper">
                        <div class="account__content">
                            <h3 class="account__content--title mb-20">Profile Information</h3>
                            <div class="account__details two">
                                <h4 class="account__details--title">Name</h4>
                                <p class="account__details--desc" id="name-div"><%= userData.name %></p>
                                <h4 class="account__details--title">Email Address</h4>
                                <p class="account__details--desc" id="email-div"><%= userData.email  %></p>
                                <a class="account__details--link" href="/address">View Addresses (1)</a>
                            </div>
                            <div class="account__details--footer d-flex">
                                <button class="account__details--footer__btn" id="edit-button" type="button">Edit</button>
                                <% if(!passport) { %>
                                <button class="account__details--footer__btn" id="change-passwordBtn" type="button">Change Password</button>
                                <% } %>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!-- my account section end -->
    </main>

   <!-- Start footer section -->
   <%- include('../partials/user/footer') %>
   <!-- End footer section --> 

    <!-- modal for edit -->
    <div class="edit-modal" id="edit-modal">
        <div class="modal-editcontent">
            <div class="row row-cols-1 justify-content-center edit-form">
                <div class="col edit-profile-col">
                    <span class="close-btn" id="close-btn">&times;</span>
                    <div class="account__login">
                        <div class="account__login--header mb-25">
                            <h2 class="account__login--header__title h3 mb-10">Edit Profile</h2>
                        </div>
                        <div class="account__login--inner">
                            <form onsubmit="return editName(event)">
                                <div class="row">
                                    <label for="name">Full Name</label>
                                    <div class="col-9">
                                        <input class="account__login--input" oninput="return disableNameBtn()" placeholder="Name" id="name" type="text" value="<%= userData.name %>">
                                    </div>
                                    <div class="col-3">
                                        <button class="account__login--btn primary__btn name-save" type="submit" id="editName-save">Save</button>
                                    </div>
                                    <div class="text-danger error-message" id="name-error"></div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>     
    </div>

    <!-- change password modal -->
    <div class="change-passModal" id="change-passModal">
        <div class="modal-passcontent">
                <form onsubmit="return formSubmit(event)">
                        <div class="row row-cols-1 justify-content-center edit-form">
                            <div class="col edit-profile-col">
                                <span class="close-btn" id="close-btn1">&times;</span>
                                <div class="account__login">
                                    <div class="account__login--header mb-25">
                                        <h2 class="account__login--header__title h3 mb-10">Change Password</h2>
                                    </div>
                                    <div class="account__login--inner">
                                        <label for="currentPassword">Current password</label>
                                        <div class="password-wrapper">
                                            <input class="account__login--input" 
                                            onkeypress="return event.charCode != 32" id="currentPassword" type="password" name="currentPassword">
                                            <button type="button" id="toggle-curpassword" class="eye-button">
                                                <span id="eye-icon1" class="eye closed-eye"></span>
                                            </button>
                                        </div>
                                        <div class="text-danger error-message" id="currPass-error"></div>
                                        <label for="newPassword">New password</label>
                                        <div class="password-wrapper">
                                            <input class="account__login--input" onkeypress="return event.charCode != 32" id="newPassword" type="password" name="password">
                                            <button type="button" id="toggle-newpassword" class="eye-button">
                                                <span id="eye-icon2" class="eye closed-eye"></span>
                                            </button>
                                        </div>
                                        <div class="text-danger error-message" id="newPass-error"></div>
                                        <label for="rePassword">Reenter new password</label>
                                        <div class="password-wrapper">
                                            <input class="account__login--input" onkeypress="return event.charCode != 32" id="rePassword" type="password" name="rePassword">
                                            <button type="button" id="toggle-repassword" class="eye-button">
                                                <span id="eye-icon3" class="eye closed-eye"></span>
                                            </button>
                                        </div>
                                        <div class="text-danger error-message" id="confPass-error"></div>
                                        <a href="/forgotPassword" class="account__login--forgot mb-2">Forgot Your Password?</a>
                                        <button class="account__login--btn primary__btn" type="submit">Save</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                </form>
            </div>     
    </div>

    <!-- modal for otp -->
    <div class="otp-modal" id="otp-modal">
        <div class="otp-modalContent d-flex justify-content-center align-items-center">
          <div style="width: 25%;">
            <div class="card p-4 shadow-lg">
              <h4 class="card-title text-center">OTP Verification</h4>
              <p class="text-muted text-center">Enter the 6-digit OTP sent to your email/phone</p>
              
              <form id="otp-form" onsubmit="return validateOTPForm(event)">
                <div class="mb-3">
                  <input 
                    type="text" 
                    id="otp"
                    class="form-control text-center h5" 
                    maxlength="6" 
                    pattern="\d{6}" 
                    placeholder="Enter OTP" 
                  >
                </div>
                <div class="text-danger error-message" id="otp-error"></div>
                <button type="submit" class="btn btn-primary w-100 h4">Verify</button>
              </form>
        
              <div class="text-center mt-3">
                <span id="timer">Resend OTP in <strong>30</strong> seconds</span>
                <button id="resend-btn" class="btn btn-link resend-disabled h4" type="button" onclick="resendOTP()">Resend OTP</button>
              </div>
            </div>
          </div>
            </div>     
    </div>

    <!-- Scroll top bar -->
    <button id="scroll__top"><svg xmlns="http://www.w3.org/2000/svg" class="ionicon" viewBox="0 0 512 512"><path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="48" d="M112 244l144-144 144 144M256 120v292"/></svg></button>

    
  <!-- All Script JS Plugins here  -->
  <script src="assets/js/vendor/popper.js" defer="defer"></script>
  <script src="assets/js/vendor/bootstrap.min.js" defer="defer"></script>
  <script src="assets/js/plugins/swiper-bundle.min.js"></script>
  <script src="assets/js/plugins/glightbox.min.js"></script>


  <!-- Customscript js -->
  <script src="assets/js/script.js"></script>
  <script>
      let timer = 30;
  let timerInterval;
  const timerElement = document.getElementById('timer');
  const resendBtn = document.getElementById('resend-btn');
  function startTimer() {
    timerInterval = setInterval(() => {
      timer--;
      timerElement.innerHTML = `Resend OTP in <strong>${timer}</strong> seconds`;
      if (timer <= 0) {
      clearInterval(timerInterval);
      timerElement.innerHTML = "";
      resendBtn.classList.remove('resend-disabled');
      resendBtn.disabled = false;
    }
    },1000)
  }
    
    // for change password
    async function formSubmit(event) {
        event.preventDefault();
        try {
            if(!validateForm()) {
                return
            }
            const currentPassElem = document.getElementById('currentPassword');
            const newPassElem = document.getElementById('newPassword');
            const confirmPassElem = document.getElementById('rePassword');
            const currentPassword = currentPassElem.value;
            const newPassword = newPassElem.value;
            const confirmPassword = confirmPassElem.value;
            const response = await fetch('/changePassword?id=<%= userData._id %>', {
                method: 'PATCH',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({currentPassword, newPassword, confirmPassword})
            });
            const data = await response.json();
            if(!response.ok) {
                throw new Error(data.message);
            }
            if(data.success) {
                Swal.fire({
                    position: "top-end",
                    icon: "success",
                    title: "Password changed successfully",
                    showConfirmButton: false,
                    timer: 1500,
                    customClass: {
                        popup: 'custom-swal-popup'
                    }
                })
                document.getElementById('change-passModal').style.display = 'none';
                currentPassElem.value = ''
                newPassElem.value = '';
                confirmPassElem.value = '';
            }
        } catch (error) {
            Swal.fire({
                position: "top-end",
                icon: "error",
                title: "Oops...",
                text: error.message,
                showConfirmButton: false,
                timer: 1500
            });   
        }
    }

    //for edit name
    async function editName(event) {
        event.preventDefault();
        if(!validateName()) {
            return
        }
        try {
            const name = document.getElementById('name').value;
            const nameDiv = document.getElementById('name-div')
            const saveButton = document.getElementById('editName-save');

            const response = await fetch('/editName', {
                method: 'PATCH',
                headers: {
                    'content-type': 'application/json'
                },
                body: JSON.stringify({name})
            });
            const data = await response.json();
            if(!response.ok) {
                throw new Error(data.message);
            }
            if(data.success) {
                Swal.fire({
                    position: "top-end",
                    icon: 'success',
                    title: 'Name Changed Successfully',
                    showConfirmButton: false,
                    timer: 1500,
                    customClass: {
                        popup: 'custom-swal-popup'
                    }
                });
                nameDiv.textContent = name;
                editModal.style.display = 'none';
                saveButton.classList.add('name-save');
                saveButton.disabled = true;
            }

        } catch (error) {
            Swal.fire({
                position: "top-end",
                icon: "error",
                title: "Oops...",
                text:error.message,
                showConfirmButton: false,
                timer: 1500,
                customClass: {
                    popup: 'custom-swal-popup'
                }
            });
        }
    }


    // change password form validation 
    function validateForm() {
        let isValid = true;
        const currentPassword = document.getElementById('currentPassword').value;
        const newPassword = document.getElementById('newPassword').value;
        const confirmPassword = document.getElementById('rePassword').value;

        const currPassError = document.getElementById('currPass-error');
        const newPassError = document.getElementById('newPass-error');
        const confmPassError = document.getElementById('confPass-error');
        
        currPassError.textContent = '';
        currPassError.style.display = 'none';

        newPassError.textContent = '';
        newPassError.style.display = 'none';

        confmPassError.textContent = '';
        confmPassError.style.display = 'none';

        const alpha = /[a-zA-Z]/;
        const digit = /\d/;
        const spaces = /^(?!.* )/;

        if(currentPassword.length < 8) {
            isValid = false;
            currPassError.textContent = 'Password should contain atleast 8 characters';
            currPassError.style.display = 'block';
        } else if(!alpha.test(currentPassword)) {
            isValid = false;
            currPassError.textContent = 'Password should contain alphabets';
            currPassError.style.display = 'block';
        } else if(!digit.test(currentPassword)) {
            isValid = false;
            currPassError.textContent = 'Password should contain numbers';
            currPassError.style.display = 'block';
        } else if(!spaces.test(currentPassword)) {
            isValid = false;
            currPassError.textContent = 'password should not contain spaces';
            currPassError.style.display = 'block';
        }

        if(newPassword.length < 8) {
            isValid = false;
            newPassError.textContent = 'Password should contain atleast 8 characters';
            newPassError.style.display = 'block';
        } else if(!alpha.test(newPassword)) {
            isValid = false;
            newPassError.textContent = 'Password should contain alphabets';
            newPassError.style.display = 'block';
        } else if(!digit.test(newPassword)) {
            isValid = false;
            newPassError.textContent = 'Password should contain numbers';
            newPassError.style.display = 'block';
        } else if(!spaces.test(newPassword)) {
            isValid = false;
            newPassError.textContent = 'password should not contain spaces';
            newPassError.style.display = 'block';
        } else if(newPassword !== confirmPassword) {
            isValid = false;
            confmPassError.textContent = 'Password do not match';
            confmPassError.style.display = 'block';
        }

        return isValid
    }
  
    // for disable name save button
    function disableNameBtn() {
        const currentName = document.getElementById('name-div').innerHTML;    
        
        const name = document.getElementById('name').value;
        const saveButton = document.getElementById('editName-save');

        saveButton.classList.add('name-save');
        saveButton.disabled = true;

        if(name !== currentName) {
            saveButton.classList.remove('name-save');
            saveButton.disabled = false;
        }   
    }

    function validateName() {
        let isValid = true;

        const name = document.getElementById('name').value;
        const nameError = document.getElementById('name-error');

        nameError.textContent = '';
        nameError.style.display = 'block';
        const namePattern = /^[A-Za-z\s]+$/;
        if(name.trim() === "") {
            isValid = false;
            nameError.style.display = 'block';
            nameError.textContent = 'Please enter a valid name';
        } else if (!namePattern.test(name)) {
            isValid = false;
            nameError.style.display = 'block';
            nameError.textContent = 'Name can only contain alphabets and spaces';
        } 
        return isValid;
    }

    // script for modal controll
    const editModal = document.getElementById('edit-modal');
    const editBtn = document.getElementById('edit-button');
    const closebtn = document.getElementById('close-btn');
    const changePassModal = document.getElementById('change-passModal')
    const changePassBtn = document.getElementById('change-passwordBtn');
    const closebtn1 = document.getElementById('close-btn1');
    editBtn.addEventListener("click", () => {
        editModal.style.display = "block";
    });
    closebtn.addEventListener("click", () => {
        editModal.style.display = "none";
    })
    window.addEventListener("click", (event) => {
        if(event.target == editModal) {
            editModal.style.display = "none";
        }
    });
    changePassBtn.addEventListener("click", () => {
        changePassModal.style.display = "block";
    });
    closebtn1.addEventListener("click", () => {
        changePassModal.style.display = "none";
    })
    window.addEventListener("click", (event) => {
        if(event.target == changePassModal) {
            changePassModal.style.display = "none";
        }
    });

    const currentPassword = document.getElementById('currentPassword');
    const curpassToggButton = document.getElementById('toggle-curpassword');
    const curpassEyeIcon = document.getElementById('eye-icon1');

    const newPassword = document.getElementById('newPassword');
    const newpassToggButton = document.getElementById('toggle-newpassword');
    const newpassEyeIcon = document.getElementById('eye-icon2');

    const rePassword = document.getElementById('rePassword');
    const repassToggButton = document.getElementById('toggle-repassword');
    const repassEyeIcon = document.getElementById('eye-icon3');

    curpassToggButton.addEventListener('click', () => {
      const isPasswordVisible = currentPassword.type === 'text';
      currentPassword.type = isPasswordVisible ? 'password' : 'text';

      // Toggle the icon class
      curpassEyeIcon.classList.toggle('open-eye', !isPasswordVisible);
      curpassEyeIcon.classList.toggle('closed-eye', isPasswordVisible);
    });

    newpassToggButton.addEventListener('click', () => {
      const isPasswordVisible = newPassword.type === 'text';
      newPassword.type = isPasswordVisible ? 'password' : 'text';

      // Toggle the icon class
      newpassEyeIcon.classList.toggle('open-eye', !isPasswordVisible);
      newpassEyeIcon.classList.toggle('closed-eye', isPasswordVisible);
    });

    repassToggButton.addEventListener('click', () => {
      const isPasswordVisible = rePassword.type === 'text';
      rePassword.type = isPasswordVisible ? 'password' : 'text';

      // Toggle the icon class
      repassEyeIcon.classList.toggle('open-eye', !isPasswordVisible);
      repassEyeIcon.classList.toggle('closed-eye', isPasswordVisible);
    });

    async function logout() {
          try {
               const response = await fetch('/logout', {method: 'POST'})
               const data = await response.json();
               if(!response.ok) {
                    throw new Error(data.message);
               }
               if(data.success) {
                    window.location.href = '/login'
               }
          } catch (error) {
               Swal.fire({
                    position: "top-end",
                    icon: "error",
                    title: "Oops...",
                    text: error.message,
                    showConfirmButton: false,
                    timer: 1500,
                    customClass: {
                         popup: 'custom-swal-popup'
                    }
               });
          }
     }

     document.getElementById('logout-btn').addEventListener('click', logout);

  </script>
  
</body>

<!-- Mirrored from risingtheme.com/html/demo-suruchi-v1/suruchi/my-account-2.html by HTTrack Website Copier/3.x [XR&CO'2014], Sat, 23 Nov 2024 05:25:38 GMT -->
</html>