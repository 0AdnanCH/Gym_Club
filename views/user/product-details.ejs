<!doctype html>
<html lang="en">


<!-- Mirrored from risingtheme.com/html/demo-suruchi-v1/suruchi/product-details.html by HTTrack Website Copier/3.x [XR&CO'2014], Sat, 23 Nov 2024 05:25:36 GMT -->

<head>
    <meta charset="utf-8">
    <title>Suruchi - Product Details</title>
    <meta name="description" content="Morden Bootstrap HTML5 Template">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="shortcut icon" type="image/x-icon" href="img/favicon.ico">

    <!-- ======= All CSS Plugins here ======== -->
    <link rel="stylesheet" href="css/plugins/swiper-bundle.min.css">
    <link rel="stylesheet" href="css/plugins/glightbox.min.css">
    <link
        href="https://fonts.googleapis.com/css2?family=Jost:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,300;1,400;1,500;1,600;1,700;1,800;1,900&amp;display=swap"
        rel="stylesheet">

    <!-- Plugin css -->
    <link rel="stylesheet" href="css/vendor/bootstrap.min.css">

    <!-- Custom Style CSS -->
    <link rel="stylesheet" href="css/style.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        .dynamic-img {
            display: none;
        }

        .dynamic-size {
            display: none;
        }

        .magnifier-lens {
            position: absolute;
            border: 1px solid #000;
            border-radius: 50%;
            cursor: crosshair;
            box-shadow: 0 0 5px #000;
            pointer-events: none;
            visibility: hidden;
            background-repeat: no-repeat;
        }
        .clr-btn{
            font-size: 0;
        }
        .error-message {
            display: none;
        }
        .custom-swal-popup .swal2-html-container {
            font-size: 15px;
        }
        .stock-avai {
            display: none;
            margin: 5px 0 0 0;
            padding: 0;
        }
        .stock-notavai {
            display: none;
            margin: 5px 0 0 0;
            padding: 0;
        }
        body {
            padding: 0;
            margin: 0;
        }
        footer {
            padding: 0;
            margin: 0;
        }
    </style>
</head>

<body>

    <!-- Start header area -->
    <%- include('../partials/user/header') %>
    <!-- End header area --> 

    <main class="main__content_wrapper">

        <!-- Start breadcrumb section -->
        <section class="breadcrumb__section breadcrumb__bg">
            <div class="container">
                <div class="row row-cols-1">
                    <div class="col">
                        <div class="breadcrumb__content text-center">
                            <h1 class="breadcrumb__content--title text-white mb-25">Product Details</h1>
                            <ul class="breadcrumb__content--menu d-flex justify-content-center">
                                <li class="breadcrumb__content--menu__items"><a class="text-white" href="/">Home</a></li>
                                <li class="breadcrumb__content--menu__items"><span class="text-white">Product
                                        Details</span></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!-- End breadcrumb section -->

        <!-- Start product details section -->
        <section class="product__details--section section--padding">
            <div class="container">
                <div class="row row-cols-lg-2 row-cols-md-2">

                    <!-- first image  -->
                    <div class="col" id="image-cont0">
                        <div class="product__details--media">
                            <div class="product__media--preview  swiper">
                                <div class="swiper-wrapper">
                                    <!-- big single image show in here -->
                                    <div class="swiper-slide">
                                        <div class="product__media--preview__items">
                                            <img class="product__media--preview__items--img" id="mainImage0"
                                                src="<%= product.variant[0].image[0] %>" alt="product-media-img"></a>
                                        </div>
                                    </div>

                                </div>
                            </div>
                            <div class="product__media--nav">
                                <div class="d-flex justify-content-center">
                                    <!-- slider image -->
                                    <% for(let i=0; i<product.variant[0].image.length;i++) { %>
                                        <div>
                                            <img style="width: 120px; height: auto;" class="product__media--nav__items--img mx-2" 
                                                src="<%= product.variant[0].image[i] %>"
                                                onclick="changeMainImage(this, 0)" alt="product-nav-img">
                                        </div>
                                    <% } %>
                                </div>
                            </div>
                        </div>
                    </div>

                    <% for(let i=1; i<product.variant.length;i++) { %>
                        <!-- dynamic image -->
                        <div class="col dynamic-img" id="image-cont<%= i %>">
                            <div class="product__details--media">
                                <div class="product__media--preview  swiper">
                                    <div class="swiper-wrapper">
                                        <!-- big single image show in here -->
                                        <div class="swiper-slide">
                                            <div class="product__media--preview__items">
                                                <img class="product__media--preview__items--img" id="mainImage<%= i %>"
                                                    src="<%= product.variant[i].image[0] %>"
                                                    alt="product-media-img"></a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="product__media--nav">
                                    <div class="d-flex justify-content-center">
                                        <!-- slider image -->
                                        <% for(let j=0; j<product.variant[i].image.length;j++) { %>
                                            <div>
                                                <img style="width: 120px; height: auto;" class="product__media--nav__items--img mx-2"
                                                    src="<%= product.variant[i].image[j] %>"
                                                    onclick="changeMainImage(this , '<%= i %>')"
                                                    alt="product-nav-img">
                                            </div>
                                        <% } %>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <% } %>
                            <div class="col">
                                <div class="product__details--info">
                                        <% if(product.offerApplied) { %>
                                            <% if(product.offerApplied.discountType === 'percentage') { %>
                                                <% let disPrice = product.salePrice * (product.offerApplied.discountVal/100) %>
                                                <% let finalDisPrice = Math.min(disPrice, product.offerApplied.maxDiscount) %>
                                                <h2 class="product__details--info__title mb-15">
                                                    <%= product.offerApplied.discountVal %>% OFF | SAVE <%= finalDisPrice %>RS
                                                </h2>
                                            <% } else { %>
                                                <h2 class="product__details--info__title mb-15">
                                                    <%= product.offerApplied.discountVal %>RS OFF | SAVE <%= product.offerApplied.discountVal %>RS
                                                </h2>
                                            <% } %>
                                        <% } %>
                                        <h2 class="product__details--info__title mb-15">
                                            <%= product.productName %>
                                        </h2>
                                        <% if(product.offerApplied) { %>
                                            <% if(product.offerApplied.discountType === 'percentage') { %>
                                                <% let disPrice = product.salePrice * (product.offerApplied.discountVal/100) %>
                                                <% let finalDisPrice = Math.min(disPrice, product.offerApplied.maxDiscount) %>
                                                <% let finalPrice = (product.salePrice - finalDisPrice).toFixed(2) %>
                                                <% if(finalPrice>0) { %>
                                                    <div class="product__details--info__price mb-10">
                                                        <span class="current__price"><%= finalPrice %></span>
                                                        <span class="price__divided"></span>
                                                        <span class="old__price"><%= product.salePrice %></span>
                                                    </div>
                                                <% } else { %>
                                                    <div class="product__details--info__price mb-10">
                                                        <span class="current__price"><%= product.salePrice %></span>
                                                        <span class="price__divided"></span>
                                                        <span class="old__price"><%= product.regularPrice %></span>
                                                    </div>
                                                    <p class="text-danger">cannot apply offer, invalid offer price.</p>
                                                <% } %>
                                            <% } else { %>
                                                <% let finalPrice = (product.salePrice - product.offerApplied.discountVal).toFixed(2) %>
                                                <% if(finalPrice>0) { %>
                                                    <div class="product__details--info__price mb-10">
                                                        <span class="current__price"><%= finalPrice %></span>
                                                        <span class="price__divided"></span>
                                                        <span class="old__price"><%= product.salePrice %></span>
                                                    </div>
                                                <% } else { %>
                                                    <div class="product__details--info__price mb-10">
                                                        <span class="current__price"><%= product.salePrice %></span>
                                                        <span class="price__divided"></span>
                                                        <span class="old__price"><%= product.regularPrice %></span>
                                                    </div>
                                                    <p class="text-danger">cannot apply offer, invalid offer price.</p>
                                                <% } %>
                                        <% }} else { %>
                                                <div class="product__details--info__price mb-10">
                                                    <span class="current__price"><%= product.salePrice %></span>
                                                    <span class="price__divided"></span>
                                                    <span class="old__price"><%= product.regularPrice %></span>
                                                </div>
                                        <% } %>
                                        <div class="product__details--info__rating d-flex align-items-center mb-15">
                                            <ul class="rating d-flex justify-content-center">
                                                <li class="rating__list">
                                                    <span class="rating__list--icon">
                                                        <svg class="rating__list--icon__svg"
                                                            xmlns="http://www.w3.org/2000/svg" width="14.105"
                                                            height="14.732" viewBox="0 0 10.105 9.732">
                                                            <path data-name="star - Copy"
                                                                d="M9.837,3.5,6.73,3.039,5.338.179a.335.335,0,0,0-.571,0L3.375,3.039.268,3.5a.3.3,0,0,0-.178.514L2.347,6.242,1.813,9.4a.314.314,0,0,0,.464.316L5.052,8.232,7.827,9.712A.314.314,0,0,0,8.292,9.4L7.758,6.242l2.257-2.231A.3.3,0,0,0,9.837,3.5Z"
                                                                transform="translate(0 -0.018)" fill="currentColor">
                                                            </path>
                                                        </svg>
                                                    </span>
                                                </li>
                                                <li class="rating__list">
                                                    <span class="rating__list--icon">
                                                        <svg class="rating__list--icon__svg"
                                                            xmlns="http://www.w3.org/2000/svg" width="14.105"
                                                            height="14.732" viewBox="0 0 10.105 9.732">
                                                            <path data-name="star - Copy"
                                                                d="M9.837,3.5,6.73,3.039,5.338.179a.335.335,0,0,0-.571,0L3.375,3.039.268,3.5a.3.3,0,0,0-.178.514L2.347,6.242,1.813,9.4a.314.314,0,0,0,.464.316L5.052,8.232,7.827,9.712A.314.314,0,0,0,8.292,9.4L7.758,6.242l2.257-2.231A.3.3,0,0,0,9.837,3.5Z"
                                                                transform="translate(0 -0.018)" fill="currentColor">
                                                            </path>
                                                        </svg>
                                                    </span>
                                                </li>
                                                <li class="rating__list">
                                                    <span class="rating__list--icon">
                                                        <svg class="rating__list--icon__svg"
                                                            xmlns="http://www.w3.org/2000/svg" width="14.105"
                                                            height="14.732" viewBox="0 0 10.105 9.732">
                                                            <path data-name="star - Copy"
                                                                d="M9.837,3.5,6.73,3.039,5.338.179a.335.335,0,0,0-.571,0L3.375,3.039.268,3.5a.3.3,0,0,0-.178.514L2.347,6.242,1.813,9.4a.314.314,0,0,0,.464.316L5.052,8.232,7.827,9.712A.314.314,0,0,0,8.292,9.4L7.758,6.242l2.257-2.231A.3.3,0,0,0,9.837,3.5Z"
                                                                transform="translate(0 -0.018)" fill="currentColor">
                                                            </path>
                                                        </svg>
                                                    </span>
                                                </li>
                                                <li class="rating__list">
                                                    <span class="rating__list--icon">
                                                        <svg class="rating__list--icon__svg"
                                                            xmlns="http://www.w3.org/2000/svg" width="14.105"
                                                            height="14.732" viewBox="0 0 10.105 9.732">
                                                            <path data-name="star - Copy"
                                                                d="M9.837,3.5,6.73,3.039,5.338.179a.335.335,0,0,0-.571,0L3.375,3.039.268,3.5a.3.3,0,0,0-.178.514L2.347,6.242,1.813,9.4a.314.314,0,0,0,.464.316L5.052,8.232,7.827,9.712A.314.314,0,0,0,8.292,9.4L7.758,6.242l2.257-2.231A.3.3,0,0,0,9.837,3.5Z"
                                                                transform="translate(0 -0.018)" fill="currentColor">
                                                            </path>
                                                        </svg>
                                                    </span>
                                                </li>
                                                <li class="rating__list">
                                                    <span class="rating__list--icon">
                                                        <svg class="rating__list--icon__svg"
                                                            xmlns="http://www.w3.org/2000/svg" width="14.105"
                                                            height="14.732" viewBox="0 0 10.105 9.732">
                                                            <path data-name="star - Copy"
                                                                d="M9.837,3.5,6.73,3.039,5.338.179a.335.335,0,0,0-.571,0L3.375,3.039.268,3.5a.3.3,0,0,0-.178.514L2.347,6.242,1.813,9.4a.314.314,0,0,0,.464.316L5.052,8.232,7.827,9.712A.314.314,0,0,0,8.292,9.4L7.758,6.242l2.257-2.231A.3.3,0,0,0,9.837,3.5Z"
                                                                transform="translate(0 -0.018)" fill="currentColor">
                                                            </path>
                                                        </svg>
                                                    </span>
                                                </li>
                                            </ul>
                                            <span class="product__items--rating__count--number">(24)</span>
                                        </div>
                                        <p class="product__details--info__desc mb-15">
                                            <%= product.description %>.
                                        </p>
                                        <div class="product__variant">
                                            <div class="product__variant--list mb-10">
                                                <fieldset class="variant__input--fieldset">
                                                    <legend class="product__variant--title mb-8">Color :</legend>
                                                    <% for(let i=0; i<product.variant.length;i++) { %>
                                                        <button type="button" onclick="return colorSelect(event)" class="clr-btn" style="background-color: <%= product.variant[i].color %>; border: none; width: 40px; height: 40px; border-radius: 50%;" id="color<%= i %>"><%= product.variant[i].color %></button>
                                                        <% } %>
                                                </fieldset>
                                                <input type="hidden" id="color-value" value="<%= product.variant[0].color %>">
                                            </div>
                                            <div class="product__variant--list mb-15">
                                                <fieldset class="variant__input--fieldset weight">
                                                    <legend class="product__variant--title mb-8">Size :</legend>
                                                    <div id="size-cont0">
                                                        <input id="XS0" onchange="return stockAvailable(event, '<%= product.variant[0].color %>')" name="size" type="radio" value="XS">
                                                        <label class="variant__size--value red" for="XS0">XS</label>
                                                        <input id="S0" onchange="return stockAvailable(event, '<%= product.variant[0].color %>')" name="size" type="radio" value="S">
                                                        <label class="variant__size--value red" for="S0">S</label>
                                                        <input id="M0" onchange="return stockAvailable(event, '<%= product.variant[0].color %>')" name="size" type="radio" value="M">
                                                        <label class="variant__size--value red" for="M0">M</label>
                                                        <input id="L0" onchange="return stockAvailable(event, '<%= product.variant[0].color %>')" name="size" type="radio" value="L">
                                                        <label class="variant__size--value red" for="L0">L</label>
                                                        <input id="XL0" onchange="return stockAvailable(event, '<%= product.variant[0].color %>')" name="size" type="radio" value="XL">
                                                        <label class="variant__size--value red" for="XL0">XL</label>
                                                        <input id="XXL0" onchange="return stockAvailable(event, '<%= product.variant[0].color %>')" name="size" type="radio" value="XXL">
                                                        <label class="variant__size--value red" for="XXL0">XXL</label>
                                                        <input id="3XL0" onchange="return stockAvailable(event, '<%= product.variant[0].color %>')" name="size" type="radio" value="XXXL">
                                                        <label class="variant__size--value red" for="3XL0">3XL</label>
                                                    </div>
                                                    <% for(let i=1; i<product.variant.length;i++) { %>
                                                        <div class="dynamic-size" id="size-cont<%= i %>">
                                                            <input id="XS<%= i %>" onchange="return stockAvailable(event, '<%= product.variant[i].color %>')" name="size" type="radio" value="XS">
                                                            <label class="variant__size--value red" for="XS<%= i %>">
                                                                XS</label>
                                                            <input id="S<%= i %>" onchange="return stockAvailable(event, '<%= product.variant[i].color %>')" name="size" type="radio" value="L">
                                                            <label class="variant__size--value red" for="S<%= i %>">
                                                                S</label>
                                                            <input id="M<%= i %>" onchange="return stockAvailable(event, '<%= product.variant[i].color %>')" name="size" type="radio" value="M">
                                                            <label class="variant__size--value red" for="M<%= i %>">
                                                                M</label>
                                                            <input id="L<%= i %>" onchange="return stockAvailable(event, '<%= product.variant[i].color %>')" name="size" type="radio" value="L">
                                                            <label class="variant__size--value red" for="L<%= i %>">
                                                                L</label>
                                                            <input id="XL<%= i %>" onchange="return stockAvailable(event, '<%= product.variant[i].color %>')" name="size" type="radio" value="XL">
                                                            <label class="variant__size--value red" for="XL<%= i %>">
                                                                XL</label>
                                                            <input id="XXL<%= i %>" onchange="return stockAvailable(event, '<%= product.variant[i].color %>')" name="size" type="radio" value="XXL">
                                                            <label class="variant__size--value red" for="XXL<%= i %>">
                                                                XXL</label>
                                                            <input id="3XL<%= i %>" onchange="return stockAvailable(event, '<%= product.variant[i].color %>')" name="size" type="radio" value="XXXL">
                                                            <label class="variant__size--value red" for="3XL<%= i %>">
                                                                3XL</label>
                                                        </div>
                                                        <% } %>
                                                        <div class="text-danger error-message" id="size-error"></div>
                                                        <p class="stock-avai text-success">Available</p>
                                                        <p class="stock-notavai text-danger">Out of Stock</p>
                                                </fieldset>
                                                <input type="hidden" id="size-value">
                                            </div>
                                            <div
                                                class="product__variant--list quantity d-flex align-items-center mb-20">
                                                <div class="quantity__box">
                                                    <button type="button" id="qty-minus-btn"
                                                        class="quantity__value quickview__value--quantity decrease"
                                                        aria-label="quantity value">-</button>
                                                    <label>
                                                        <input type="number" id="quantity"
                                                            class="quantity__number quickview__value--number" min="1" max="10"
                                                            value="1" />
                                                    </label>
                                                    <button type="button" id="qty-plus-btn"
                                                        class="quantity__value quickview__value--quantity increase"
                                                        aria-label="quantity value">+</button>
                                                </div>
                                                <button class="quickview__cart--btn primary__btn" id="add-to-cart" type="button">Add To
                                                    Cart</button>
                                            </div>
                                            <div class="product__variant--list mb-15">
                                                <a id="add-to-wishlist" class="variant__wishlist--icon mb-15"
                                                    title="Add to wishlist">
                                                    <svg class="quickview__variant--wishlist__svg"
                                                        xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                                                        <path
                                                            d="M352.92 80C288 80 256 144 256 144s-32-64-96.92-64c-52.76 0-94.54 44.14-95.08 96.81-1.1 109.33 86.73 187.08 183 252.42a16 16 0 0018 0c96.26-65.34 184.09-143.09 183-252.42-.54-52.67-42.32-96.81-95.08-96.81z"
                                                            fill="none" stroke="currentColor" stroke-linecap="round"
                                                            stroke-linejoin="round" stroke-width="32" />
                                                    </svg>
                                                    Add to Wishlist
                                                </a>
                                                <button class="variant__buy--now__btn primary__btn" type="submit">Buy it
                                                    now</button>
                                            </div>
                                            <div class="product__details--info__meta">
                                                <p class="product__details--info__meta--list"><strong>Category:</strong>
                                                    <span><%= category.name %></span> </p>
                                                <p class="product__details--info__meta--list"><strong>Type:</strong>
                                                    <span>Dress</span> </p>
                                            </div>
                                        </div>
                                </div>
                            </div>
                </div>
            </div>
        </section>
       
    </main>

  <!-- Start footer section -->
  <%- include('../partials/user/footer') %>
  <!-- End footer section --> 

    

    <!-- Scroll top bar -->
    <button id="scroll__top"><svg xmlns="http://www.w3.org/2000/svg" class="ionicon" viewBox="0 0 512 512">
            <path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="48"
                d="M112 244l144-144 144 144M256 120v292" />
        </svg></button>

    <!-- All Script JS Plugins here  -->
    <script src="js/vendor/popper.js" defer="defer"></script>
    <script src="js/vendor/bootstrap.min.js" defer="defer"></script>
    <script src="js/plugins/glightbox.min.js"></script>


    <!-- Customscript js -->
    <script src="js/script.js"></script>
    <script>

        

        async function addToCart(event) {
            event.preventDefault();
            try {
                if(!isSizeValid()) {
                    return;
                }
                const color = document.getElementById('color-value').value;
                const size = document.getElementById('size-value').value;
                const quantity = document.getElementById('quantity').value;
                if(quantity<1 || quantity>10) {
                    return;
                }
                const response = await fetch(`/addToCart?id=<%= product._id %>`, {
                    method: 'POST', 
                    headers: {
                        'content-type': 'application/json'
                    },
                    body: JSON.stringify({
                        color,size,quantity
                    })
                });
                const data = await response.json();
                if(!response.ok) {
                    if(data.redirectUrl) {
                        return window.location.href = data.redirectUrl;
                    }
                    throw new Error(data.message);
                }
                if(data.success) {
                    Swal.fire({
                        position: "top-end",
                        icon: 'success',
                        title: 'Product added successfully',
                        showConfirmButton: false,
                        timer: 1500,
                        customClass: {
                            popup: 'custom-swal-popup'
                        }
                    })
                    .then(() => {
                        document.querySelectorAll('.cart-qty').forEach(elem => elem.innerHTML = data.itemQty);
                    })
                }
            } catch (error) {
                Swal.fire({
                    position: "top-end",
                    icon: "error",
                    title: "Oops...",
                    text: error.message,
                    showConfirmButton: false,
                    timer: 1500,
                    customClass: {
                        popup: 'custom-swal-popup'
                    }
                })
            }
        }

        const addToCartBtn = document.getElementById('add-to-cart');
        addToCartBtn.addEventListener('click', addToCart);

        async function stockAvailable(event, color) {
            event.preventDefault();
            try {
                const sizeError = document.getElementById('size-error');
                sizeError.style.display = 'none';
                sizeError.textContent = '';
                const size = event.target.value;
                const response = await fetch('stockAvailable?id=<%= product._id %>', {
                    method: 'POST',
                    headers: {
                        'content-type': 'application/json'
                    },
                    body: JSON.stringify({ size, color })
                });
                const data = await response.json();
                if(!response.ok) {
                    throw new Error(data.message);
                }
                if(data.success) {
                    if(data.stock) {
                        document.querySelector('.stock-notavai').style.display = 'none';
                        document.querySelector('.stock-avai').style.display = 'block';
                    } else {
                        document.querySelector('.stock-avai').style.display = 'none';
                        document.querySelector('.stock-notavai').style.display = 'block';
                    }
                }
            } catch (error) {
                Swal.fire({
                    position: "top-end",
                    icon: "error",
                    title: "Oops...",
                    text: error.message,
                    showConfirmButton: false,
                    timer: 1500,
                    customClass: {
                        popup: 'custom-swal-popup'
                    }
                })
            }
        }
        // fetch for add to wishlist
        async function addtoWishlist(event) {
            event.preventDefault();
            try {
                if(!isSizeValid()) {
                    return;
                }
                const color = document.getElementById('color-value').value;
                const size = document.getElementById('size-value').value;
                const response = await fetch(`/addtoWishlist?id=<%= product._id %>`, {
                    method: 'POST', 
                    headers: {
                        'content-type': 'application/json'
                    },
                    body: JSON.stringify({
                        color,size
                    })
                });
                const data = await response.json();
                if(!response.ok) {
                    if(data.redirectUrl) {
                        return window.location.href = data.redirectUrl;
                    }
                    throw new Error(data.message);
                }
                if(data.success) {
                    Swal.fire({
                        position: "top-end",
                        icon: 'success',
                        title: 'Product added successfully',
                        showConfirmButton: false,
                        timer: 1500,
                        customClass: {
                            popup: 'custom-swal-popup'
                        }
                    })
                    .then(() => {
                        document.querySelectorAll('.wishlist-qty').forEach(elem => elem.innerHTML = data.itemQty);
                    })
                }
            } catch (error) {
                Swal.fire({
                    position: "top-end",
                    icon: "error",
                    title: "Oops...",
                    text: error.message,
                    showConfirmButton: false,
                    timer: 1500,
                    customClass: {
                        popup: 'custom-swal-popup'
                    }
                })
            }
        }
        const wishlistBtn = document.getElementById('add-to-wishlist');
        wishlistBtn.addEventListener('click', addtoWishlist);

        function isSizeValid() {
            let isValid = false;
            const size = document.getElementsByName('size');
            const sizeError = document.getElementById('size-error');
            sizeError.style.display = 'none';
            sizeError.textContent = '';
            for(let element of size) {
                if(element.checked) {
                    const size = document.getElementById('size-value').value = element.value;
                    isValid = true 
                    return isValid;
                }
            }
            sizeError.style.display = 'block';
            sizeError.textContent = 'Select a Size';
            return isValid;
        }

        function colorSelect(event) {
            event.preventDefault();
            const color = event.target.value;
            const selectedClr = document.getElementById('color-value').value;
            if(color !== selectedClr) {
                document.getElementById('size-value').value = '';
                document.querySelector('.stock-notavai').style.display = 'none';
                document.querySelector('.stock-avai').style.display = 'none';
            }
        }

        function incQuantity() {
            const qtyValue = document.getElementById('quantity').value;
            if(qtyValue < 10) {
                document.getElementById('quantity').value++;
            }
        }
        function decQuantity() {
            const qtyValue = document.getElementById('quantity').value;
            if(qtyValue > 1) {
                document.getElementById('quantity').value--;
            }
        }
        const qtyPlusBtn = document.getElementById('qty-plus-btn');
        const qtyMinusBtn = document.getElementById('qty-minus-btn');
        qtyPlusBtn.addEventListener('click',incQuantity);
        qtyMinusBtn.addEventListener('click',decQuantity);






        function changeMainImage(thumbnail, index) {
            // Get the main image element
            const mainImage = document.getElementById('mainImage' + index);

            // Update the main image's src to the clicked thumbnail's src
            mainImage.src = thumbnail.src;
        }
        const index = '<%= product.variant.length %>';
        dynamicDisplay();
        function dynamicDisplay() {

            for (let i = 0; i < index; i++) {
                const imgCont = document.getElementById('image-cont' + i);
                const sizeCont = document.getElementById('size-cont' + i);
                const colorBtn = document.getElementById('color' + i);
                const allImgCont = document.querySelectorAll('.dynamic-img');
                const allSizeCont = document.querySelectorAll('.dynamic-size');

                colorBtn.addEventListener('click', () => {

                    if (i !== 0) {
                        document.getElementById('image-cont0').style.display = 'none';
                        document.getElementById('size-cont0').style.display = 'none';
                    }
                    allImgCont.forEach(element => {
                        element.style.display = 'none';
                    });
                    allSizeCont.forEach(element => {
                        element.style.display = 'none';
                    });
                    imgCont.style.display = 'block';
                    sizeCont.style.display = 'block';

                    document.getElementById('color-value').value = colorBtn.innerHTML;
                })
            }
        }


        // Create the Magnifier Lens for zooming product---
        var magnifierLens = document.createElement('div');
        magnifierLens.classList.add('magnifier-lens');
        document.body.appendChild(magnifierLens); // Append it to the body or a specific container

        function setupMagnifier(imageElement) {
            var magnificationFactor = 3; // Adjust magnification level as needed
            var magnifierSize = 200; // Starting size of the magnifier lens

            // Ensure the magnifier lens is styled and prepared
            magnifierLens.style.backgroundRepeat = 'no-repeat';
            magnifierLens.style.pointerEvents = 'none';
            magnifierLens.style.position = 'absolute';
            magnifierLens.style.border = '1px solid #000';
            magnifierLens.style.borderRadius = '50%';
            magnifierLens.style.width = magnifierSize + 'px'; // Diameter of the lens
            magnifierLens.style.height = magnifierSize + 'px'; // Diameter of the lens
            magnifierLens.style.visibility = 'hidden'; // Initially hidden
            magnifierLens.style.boxShadow = '0 0 5px #000';
            magnifierLens.style.cursor = 'crosshair';

            // Function to update magnifier lens size
            function updateMagnifierSize(deltaY) {
                // Update magnifier size
                magnifierSize += deltaY > 0 ? -20 : 20;
                magnifierSize = Math.max(100, Math.min(magnifierSize, 400));

                // Adjust magnification factor based on lens size
                magnificationFactor = 2 + (magnifierSize - 100) * (5 - 2) / (400 - 100);

                magnifierLens.style.width = magnifierSize + 'px';
                magnifierLens.style.height = magnifierSize + 'px';

                // Update lens styling for new magnification
                updateLensMagnification();
            }

            function updateLensMagnification() {
                if (!imageElement) return; // Ensure there's an image element to work on

                var bounds = imageElement.getBoundingClientRect();
                var bgPosX = -(magnifierLens.offsetLeft - bounds.left) * magnificationFactor - magnifierLens.offsetWidth / 2;
                var bgPosY = -(magnifierLens.offsetTop - bounds.top) * magnificationFactor - magnifierLens.offsetHeight / 2;

                magnifierLens.style.backgroundSize = `${imageElement.width * magnificationFactor}px ${imageElement.height * magnificationFactor}px`;
                magnifierLens.style.backgroundPosition = `${bgPosX}px ${bgPosY}px`;

                // Trigger reflow
                magnifierLens.offsetHeight;
            }

            imageElement.addEventListener('mousemove', function (e) {
                magnifierLens.style.visibility = 'visible';
                var bounds = e.target.getBoundingClientRect();
                var mouseX = e.clientX - bounds.left;
                var mouseY = e.clientY - bounds.top;

                var lensX = mouseX - (magnifierLens.offsetWidth / 2);
                var lensY = mouseY - (magnifierLens.offsetHeight / 2);

                magnifierLens.style.left = (bounds.left + window.pageXOffset + lensX) + 'px';
                magnifierLens.style.top = (bounds.top + window.pageYOffset + lensY) + 'px';

                var bgPosX = -((mouseX * magnificationFactor) - magnifierLens.offsetWidth / 2);
                var bgPosY = -((mouseY * magnificationFactor) - magnifierLens.offsetHeight / 2);

                magnifierLens.style.backgroundImage = `url('${imageElement.src}')`;
                magnifierLens.style.backgroundSize = `${imageElement.width * magnificationFactor}px ${imageElement.height * magnificationFactor}px`;
                magnifierLens.style.backgroundPosition = `${bgPosX}px ${bgPosY}px`;

                imageElement.style.cursor = 'none'; // Hide the cursor when magnifier is active
            });

            imageElement.addEventListener('wheel', function (e) {
                e.preventDefault(); // Prevent the page from scrolling
                updateMagnifierSize(e.deltaY); // Adjust the magnifier size based on scroll direction
            }, { passive: false });

            imageElement.addEventListener('mouseleave', function () {
                magnifierLens.style.visibility = 'hidden';
                imageElement.style.cursor = 'default'; // Reset the cursor when the mouse leaves
            });
        }


        for (let i = 0; i < index; i++) {
            let imageElement = document.getElementById('mainImage' + i);
            setupMagnifier(imageElement)
        }


    </script>

</body>

<!-- Mirrored from risingtheme.com/html/demo-suruchi-v1/suruchi/product-details.html by HTTrack Website Copier/3.x [XR&CO'2014], Sat, 23 Nov 2024 05:25:37 GMT -->

</html>